%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: LS Square Root
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.8\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19800\nNode;AmplifyShaderEditor.CommentaryNode;69;-640,544;Inherit;False;1270.695;540.8244;Example
    Normal Reconstruct Z Node;9;63;68;62;61;60;59;58;70;72;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;51;-640,80;Inherit;False;1252;443;Example
    Normalize Node;11;41;42;43;44;45;46;47;49;52;53;71;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;37;-640,-256;Inherit;False;456;304;World
    X Position;2;33;34;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;36;-128,-256;Inherit;False;248;304;Square
    Root X Position;1;35;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;25;-640,-640;Inherit;False;649.7999;305.1;Square
    Root Node;2;19;32;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;19;-432,-592;Inherit;False;384.0999;100;;;0,0,0,1;The
    Sqrt Node outputs the square root of a scalar or of the individual components
    of vectors defined by its Input value;0;0\nNode;AmplifyShaderEditor.SqrtOpNode;35;-80,-208;Inherit;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WorldPosInputsNode;33;-576,-208;Inherit;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.ScaleNode;34;-368,-208;Inherit;True;2;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode;38;-1056,-640;Inherit;False;385;252;Reference
    Implementation;;0,0,0,1;sqrt is best implemented as a native square root instruction,
    however sqrt may be implemented via a rsqrt function:$$float3 sqrt(float3 a)${$ 
    return 1.0 / rsqrt(a)@$}$Pr;0;0\nNode;AmplifyShaderEditor.BreakToComponentsNode;41;-432,208;Inherit;False;FLOAT3;1;0;FLOAT3;0,0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;42;-256,208;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;43;-256,304;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;44;-256,400;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;45;-96,208;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;46;32,208;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleDivideOpNode;49;368,144;Inherit;True;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SqrtOpNode;47;176,208;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode;53;48,320;Inherit;False;235.4359;122.4832;;;0,0,0,1;The
    Square Root operation is used in the Normalize node to set the length of a vector
    to 1.;0;0\nNode;AmplifyShaderEditor.Vector3Node;52;-624,144;Inherit;False;Constant;_NormalVector;Normal
    Vector;0;0;Create;True;0;0;0;False;0;False;0,1,0;0,0,0;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.DynamicAppendNode;63;352,608;Inherit;True;FLOAT3;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.StickyNoteNode;70;25.59998,832;Inherit;False;283.1001;111.9;;;0,0,0,1;The
    Square Root operation is used in the Normal Reconstruct Z node to find the Z
    component of a normal from the X and Y.;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;71;-608,352;Inherit;False;183.5999;104.8;;;0.08490568,0.08490568,0.08490568,1;See
    Normalize Node for more detail;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;72;-592,768;Inherit;False;183.5999;104.8;;;0.08490568,0.08490568,0.08490568,1;See
    Normal Reconstruct Z Node for more detail;0;0\nNode;AmplifyShaderEditor.Vector3Node;68;-560,608;Inherit;False;Constant;_NormalVector1;Normal
    Vector;0;0;Create;True;0;0;0;False;0;False;0,1,0;0,0,0;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.BreakToComponentsNode;58;-304,608;Inherit;False;FLOAT3;1;0;FLOAT3;0,0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.DotProductOpNode;59;-304,736;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SaturateNode;60;-144,736;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.OneMinusNode;61;32,736;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SqrtOpNode;62;192,736;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SqrtOpNode;32;-608,-592;Inherit;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;0;-640,-768;Inherit;False;True;-1;Out;0;True;1;0;FLOAT;0;False;1;FLOAT;0\nWireConnection;35;0;34;0\nWireConnection;34;0;33;1\nWireConnection;41;0;52;0\nWireConnection;42;0;41;0\nWireConnection;42;1;41;0\nWireConnection;43;0;41;1\nWireConnection;43;1;41;1\nWireConnection;44;0;41;2\nWireConnection;44;1;41;2\nWireConnection;45;0;42;0\nWireConnection;45;1;43;0\nWireConnection;46;0;45;0\nWireConnection;46;1;44;0\nWireConnection;49;0;52;0\nWireConnection;49;1;47;0\nWireConnection;47;0;46;0\nWireConnection;63;0;58;0\nWireConnection;63;1;58;1\nWireConnection;63;2;62;0\nWireConnection;58;0;68;0\nWireConnection;59;0;68;0\nWireConnection;59;1;68;0\nWireConnection;60;0;59;0\nWireConnection;61;0;60;0\nWireConnection;62;0;61;0\nASEEND*/\n//CHKSM=08CB25D714215847515EF5B272D8D8BF67B719A6"
  m_functionName: 
  m_description: 'Square Root Node

    Sqrt


    Learning Sample


    GPU Cycles:

    16-31'
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_headerStyle: 2
  m_headerColor: {r: 0.19215687, g: 0.25882354, b: 0.3254902, a: 1}
  m_customNodeCategory: LS Math
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
