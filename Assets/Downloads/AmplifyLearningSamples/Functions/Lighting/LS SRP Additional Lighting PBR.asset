%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: LS SRP Additional Lighting PBR
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.9.1\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19901\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;577;-5376,-1520;Inherit;False;5476;10515;Math;113;86;118;100;143;163;178;191;248;412;232;198;11;12;13;14;15;16;17;316;315;314;313;312;310;317;424;262;254;311;255;65;264;150;64;62;119;120;122;123;124;121;91;92;296;94;95;93;318;256;141;135;133;308;307;142;319;257;302;269;83;153;161;155;154;160;162;165;258;320;168;169;175;334;177;179;176;170;321;259;134;140;181;182;205;228;218;206;188;189;183;322;260;234;238;236;323;261;237;243;252;240;241;242;235;423;425;414;413;415;416;417;0;61;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;578;-5376,-2736;Inherit;False;2059.025;1163.019;SRP
    Additional Lights PBR;12;581;583;584;586;587;590;592;593;594;409;411;598;;0.01886791,0.01886791,0.01886791,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;86;-2640,-1472;Inherit;False;1801.075;1150.851;Beckman;22;389;388;390;394;393;392;391;387;60;66;426;69;68;67;386;447;445;443;441;437;436;435;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;118;-2640,-304;Inherit;False;1185.779;1016.78;Phong;16;373;372;129;427;128;127;126;125;374;379;463;455;452;451;450;449;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;100;-2640,736;Inherit;False;1187.398;1011.329;Blinn-Phong;16;470;469;468;467;466;465;382;381;428;275;277;278;276;90;383;380;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;143;-2640,1776;Inherit;False;1191.131;1041.429;Gaussian;12;429;138;139;136;137;132;489;481;480;479;478;477;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;163;-2640,2832;Inherit;False;1192.91;1125.733;GGX;13;430;158;159;156;157;152;503;496;495;494;493;492;491;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;178;-2640,3984;Inherit;False;1190.856;1133.803;Trowbridge
    Reitz;13;167;431;173;174;171;172;517;510;509;508;507;506;505;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;191;-2640,5136;Inherit;False;1193.629;1389.937;Trowbridge
    Reitz Anisotropic;15;185;432;186;187;184;180;535;533;525;524;523;522;521;520;519;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;248;-2624,6544;Inherit;False;1191.474;1520.782;Ward
    Anisotropic;16;239;433;247;246;245;244;555;545;544;543;542;541;540;539;538;537;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;412;-2640,8080;Inherit;False;1202.161;889.3876;Deur
    GSF;11;434;421;422;420;419;418;566;563;561;560;559;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;583;-5248,-2336;Inherit;False;367;304;Phong
    NDF;1;582;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;581;-5248,-2656;Inherit;False;367;304;Beckman
    NDF;1;579;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;232;-5328,1680;Inherit;False;1919.426;515.3901;Anisotropic;20;354;209;345;216;346;351;215;208;222;226;230;231;229;224;227;223;225;253;355;365;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;198;-5328,176;Inherit;False;992;384;Tangents;10;200;201;196;197;202;204;203;199;195;193;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;11;-5328,896;Inherit;False;1666.101;740.4753;Smoothness/Gloss/Roughness;25;299;301;293;367;292;291;87;364;294;290;89;88;147;146;24;295;207;25;20;23;22;21;19;18;377;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;12;-5328,592;Inherit;False;1088;256;NdotV;7;53;52;51;49;48;47;46;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;13;-5328,-608;Inherit;False;706.7151;255.5793;World
    View Direction;3;50;42;41;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;14;-5328,-1408;Inherit;False;1187.846;385.0698;Shadow
    Mask;6;30;37;36;29;27;28;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;15;-5328,-336;Inherit;False;706.2857;247.5089;Norm.
    Screen UV;3;40;43;39;;0.02830189,0.02830189,0.02830189,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;16;-5328,-1008;Inherit;False;1183.001;387.3999;World
    Normal;7;38;35;34;33;32;31;26;;0.03773582,0.03773582,0.03773582,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;17;-5328,-64;Inherit;False;543.7343;227.7169;World
    Position;2;45;44;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;435;-2608,-1440;Inherit;False;130.5;126;WorldPosition;1;438;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;436;-2608,-800;Inherit;False;130.5;126;ScreenUV;1;439;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;437;-2608,-672;Inherit;False;130.5;126;ShadowMask;1;440;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;441;-2608,-1312;Inherit;False;130.5;126;WorldNormal;1;442;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;443;-2608,-1056;Inherit;False;130.5;126;Roughness;1;444;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;445;-2608,-928;Inherit;False;130.5;126;Pi;1;446;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;447;-2608,-1184;Inherit;False;130.5;126;WorldView;1;448;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;449;-2592,-240;Inherit;False;130.5;126;WorldPosition;1;456;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;450;-2592,272;Inherit;False;130.5;126;ScreenUV;1;459;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;451;-2592,400;Inherit;False;130.5;126;ShadowMask;1;460;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;452;-2592,-112;Inherit;False;130.5;126;WorldNormal;1;457;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;455;-2592,16;Inherit;False;130.5;126;WorldView;1;458;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;463;-2592,144;Inherit;False;130.5;126;Gloss
    Vect;1;464;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;465;-2608,800;Inherit;False;130.5;126;WorldPosition;1;471;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;466;-2608,1312;Inherit;False;130.5;126;ScreenUV;1;475;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;467;-2608,1440;Inherit;False;130.5;126;ShadowMask;1;474;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;468;-2608,928;Inherit;False;130.5;126;WorldNormal;1;472;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;469;-2608,1056;Inherit;False;130.5;126;WorldView;1;473;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;470;-2608,1184;Inherit;False;130.5;126;Gloss
    Vect;1;476;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;477;-2576,1840;Inherit;False;130.5;126;WorldPosition;1;483;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;478;-2576,2352;Inherit;False;130.5;126;ScreenUV;1;487;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;479;-2576,2480;Inherit;False;130.5;126;ShadowMask;1;486;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;480;-2576,1968;Inherit;False;130.5;126;WorldNormal;1;484;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;481;-2576,2096;Inherit;False;130.5;126;WorldView;1;485;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;489;-2576,2224;Inherit;False;130.5;126;Roughness;1;490;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;491;-2592,2880;Inherit;False;130.5;126;WorldPosition;1;497;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;492;-2592,3536;Inherit;False;130.5;126;ScreenUV;1;502;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;493;-2592,3664;Inherit;False;130.5;126;ShadowMask;1;501;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;494;-2592,3008;Inherit;False;130.5;126;WorldNormal;1;498;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;495;-2592,3136;Inherit;False;130.5;126;WorldView;1;499;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;496;-2592,3264;Inherit;False;130.5;126;Roughness;1;500;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;503;-2592,3408;Inherit;False;130.5;126;Pi;1;504;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;505;-2576,4048;Inherit;False;130.5;126;WorldPosition;1;511;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;506;-2576,4688;Inherit;False;130.5;126;ScreenUV;1;516;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;507;-2576,4832;Inherit;False;130.5;126;ShadowMask;1;515;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;508;-2576,4176;Inherit;False;130.5;126;WorldNormal;1;512;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;509;-2576,4304;Inherit;False;130.5;126;WorldView;1;513;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;510;-2576,4432;Inherit;False;130.5;126;Roughness;1;514;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;517;-2576,4560;Inherit;False;130.5;126;Pi;1;518;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;519;-2576,5200;Inherit;False;130.5;126;WorldPosition;1;526;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;520;-2576,6128;Inherit;False;130.5;126;ScreenUV;1;531;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;521;-2576,6272;Inherit;False;130.5;126;ShadowMask;1;530;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;522;-2576,5456;Inherit;False;130.5;126;worldTangent;1;527;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;523;-2576,5744;Inherit;False;130.5;126;WorldView;1;528;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;524;-2576,5872;Inherit;False;130.5;126;AnisoVec;1;529;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;525;-2576,6000;Inherit;False;130.5;126;Pi;1;532;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;533;-2576,5328;Inherit;False;130.5;126;WorldNormal;1;534;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;535;-2576,5584;Inherit;False;130.5;126;worldBitangent;1;536;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;537;-2576,6608;Inherit;False;130.5;126;WorldPosition;1;546;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;538;-2576,7680;Inherit;False;130.5;126;ScreenUV;1;551;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;539;-2576,7824;Inherit;False;130.5;126;ShadowMask;1;550;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;540;-2576,6864;Inherit;False;130.5;126;worldTangent;1;547;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;541;-2576,7152;Inherit;False;130.5;126;WorldView;1;549;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;542;-2576,7424;Inherit;False;130.5;126;AnisoVec;1;554;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;543;-2576,7552;Inherit;False;130.5;126;Pi;1;552;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;544;-2576,6736;Inherit;False;130.5;126;WorldNormal;1;548;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;545;-2576,6992;Inherit;False;130.5;126;worldBitangent;1;553;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;555;-2576,7280;Inherit;False;130.5;126;NdotV;1;556;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;559;-2560,8128;Inherit;False;130.5;126;WorldPosition;1;569;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;560;-2560,8512;Inherit;False;130.5;126;ScreenUV;1;576;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;561;-2560,8656;Inherit;False;130.5;126;ShadowMask;1;575;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;563;-2560,8384;Inherit;False;130.5;126;WorldView;1;573;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;566;-2560,8256;Inherit;False;130.5;126;WorldNormal;1;571;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;584;-5248,-2016;Inherit;False;367;304;BlinnPhong
    NDF;1;585;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;586;-4832,-2336;Inherit;False;367;304;GGX
    NDF;1;589;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;587;-4832,-2656;Inherit;False;367;304;Gaussian
    NDF;1;588;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;590;-4832,-2016;Inherit;False;367;304;Trowbridge
    Reitz NDF;1;591;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;592;-4416,-2336;Inherit;False;367;304;Ward
    Anisotropic NDF;1;596;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;593;-4416,-2656;Inherit;False;367;304;Trowbridge
    Reitz Anisotropic NDF;1;595;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;594;-4416,-2016;Inherit;False;367;304;Deur
    GSF;1;597;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.StickyNoteNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;18;-4592,1056;Inherit;False;287;108;Compute
    Gloss/Roughness;;0,0,0,1;in the event that Smoothness hasn't been processed/converted
    to 'Gloss' or 'Roughness' yet.;0;0\nNode;AmplifyShaderEditor.StickyNoteNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;253;-4336,1904;Inherit;False;152;100;Vectorized;;0,0,0,1;for
    Optimization;0;0\nNode;AmplifyShaderEditor.StickyNoteNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;295;-4032,1424;Inherit;False;292;157;Vectorized
    Gloss;;0,0,0,1;contains both the gloss value and it precomputed math for BOTH
    Phong & Blinn-Phong (since they use similar math), all for the sake of simplifying
    & streamlining the process;0;0\nNode;AmplifyShaderEditor.StickyNoteNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;365;-4016,1840;Inherit;False;367.5;166;Precompute
    Anisotropic Vector;;0,0,0,1;;0;0\nNode;AmplifyShaderEditor.StickyNoteNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;379;-1984,192;Inherit;False;310.2614;139.1079;Divide
    Out by Specular Power;;0,0,0,1;currently unsure why but the output of Phong is
    producing higher Values then intended but dividing it by 'Specular Power' (GlossVec.y)
    brings it back into expected ranges.;0;0\nNode;AmplifyShaderEditor.StickyNoteNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;380;-1952,1216;Inherit;False;365.8234;153.5452;Divide
    Out by Specular Power;;0,0,0,1;currently unsure why but the output of Blinn-Phong
    is producing higher Values then intended but dividing it by 'Specular Power'
    (GlossVec.y) brings it back into expected ranges.;0;0\nNode;AmplifyShaderEditor.StickyNoteNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;386;-2000,-944;Inherit;False;574;274.5;Vector2
    Out (HiPoint is X & Exp is Y);;0,0,0,1;to nicely Blend this Additional Lights
    NDF with similar NDF(s), this values must be MIN-ed & MAX-ed Respectively with
    the Additional Lights NDF's Hipoint & Exp then Mutiply the both products together
    like in base Function.$$Example Pesudo Code:$$float totalHiPoint = min( baseHiPoint,
    addHiPoint )@$float totalExp = max( baseExp, addExp)@$$float totalNDF = max(0.000001,
    totalHiPoint * totalExp)@$$return totalNDF@;0;0\nNode;AmplifyShaderEditor.StickyNoteNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;409;-3984,-2656;Inherit;False;620.2412;292.7632;-
    Amplify Shader Pack Example;;0,0,0,1;;0;0\nNode;AmplifyShaderEditor.StickyNoteNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;411;-3984,-2336;Inherit;False;626.0007;704.525;Notes
    (Unlit) Additional Directives ;;0,0,0,1;Unlit URP 10x$#pragma multi_compile _
    _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHTS$#pragma multi_compile_fragment _
    _ADDITIONAL_LIGHT_SHADOWS$$Unlit URP 12x$#pragma multi_compile _ _ADDITIONAL_LIGHTS_VERTEX
    _ADDITIONAL_LIGHTS$#pragma multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS$$Unlit
    URP 14x$#pragma multi_compile _ _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHTS$#pragma
    multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS$#pragma multi_compile _ _FORWARD_PLUS$#pragma
    multi_compile _ _LIGHT_LAYERS$$Unlit URP 15x$#pragma multi_compile _ _ADDITIONAL_LIGHTS_VERTEX
    _ADDITIONAL_LIGHTS$#pragma multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS$#pragma
    multi_compile _ _FORWARD_PLUS$#pragma multi_compile _ _LIGHT_LAYERS$$Unlit URP
    16x$#pragma multi_compile _ _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHTS$#pragma
    multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS$#pragma multi_compile _ _FORWARD_PLUS$#pragma
    multi_compile _ _LIGHT_LAYERS$$Unlit URP 17.0x$#pragma multi_compile _ _ADDITIONAL_LIGHTS_VERTEX
    _ADDITIONAL_LIGHTS$#pragma multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS$#pragma
    multi_compile _ _FORWARD_PLUS$#pragma multi_compile _ _LIGHT_LAYERS$$Unlit URP
    17.1x$#pragma multi_compile _ _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHTS$#pragma
    multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS$#pragma multi_compile _ _CLUSTER_LIGHT_LOOP$#pragma
    multi_compile _ _LIGHT_LAYERS$$;0;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;67;-2384,-1200;Inherit;False;float
    Exp = 0@$float HiPoint = pi + 1@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount
    = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN( lightCount )$\t\t#if ASE_SRP_VERSION
    >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat NdotH
    = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal ))@$\t\tNdotH
    = NdotH * NdotH * sign( light.distanceAttenuation * light.shadowAttenuation )
    @$\t\tExp = max( Exp, exp(( NdotH - 1 ) / max( 0.0001, Roughness * NdotH )))@$\t\tHiPoint
    = min( HiPoint, ( 1.0 / max( 0.0001, pi * Roughness * NdotH * NdotH )))@$\tLIGHT_LOOP_END$#endif$return
    float2( HiPoint, Exp )@;2;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Float;False;True;Roughness;FLOAT;0;In;;Float;False;True;pi;FLOAT;0;In;;Float;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Float;False;AdditionalLights_BeckmanNDF12x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;68;-2384,-1008;Inherit;False;float
    Exp = 0@$float HiPoint = pi + 1@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_BECKNDF(Light)\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tNdotH = NdotH * NdotH * sign( light.distanceAttenuation * light.shadowAttenuation
    )@\\$\t\tExp = max( Exp, exp(( NdotH - 1 ) / max( 0.0001, Roughness * NdotH )))@\\$\t\tHiPoint
    = min( HiPoint, ( 1.0 / max( 0.0001, pi * Roughness * NdotH * NdotH )))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\tfor
    (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BECKNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BECKNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return float2( HiPoint, Exp )@;2;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Float;False;True;Roughness;FLOAT;0;In;;Float;False;True;pi;FLOAT;0;In;;Float;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Float;False;AdditionalLights_BeckmanNDF14x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;69;-2384,-784;Inherit;False;float
    Exp = 0@$float HiPoint = pi + 1@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_BECKNDF(Light)\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tNdotH = NdotH * NdotH * sign( light.distanceAttenuation * light.shadowAttenuation
    )@\\$\t\tExp = max( Exp, exp(( NdotH - 1 ) / max( 0.0001, Roughness * NdotH )))@\\$\t\tHiPoint
    = min( HiPoint, ( 1.0 / max( 0.0001, pi * Roughness * NdotH * NdotH )))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BECKNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BECKNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return float2( HiPoint, Exp )@;2;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_BeckmanNDF17.0x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;426;-2384,-560;Inherit;False;float
    Exp = 0@$float HiPoint = pi + 1@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_BECKNDF(Light)\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tNdotH = NdotH * NdotH * sign( light.distanceAttenuation * light.shadowAttenuation
    )@\\$\t\tExp = max( Exp, exp(( NdotH - 1 ) / max( 0.0001, Roughness * NdotH )))@\\$\t\tHiPoint
    = min( HiPoint, ( 1.0 / max( 0.0001, pi * Roughness * NdotH * NdotH )))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_CLUSTER_LIGHT_LOOP$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light
    = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BECKNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BECKNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return float2( HiPoint, Exp )@;2;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_BeckmanNDF17.1x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;66;-2384,-1392;Inherit;False;float
    Exp = 0@$float HiPoint = pi + 1@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount
    = GetAdditionalLightsCount()@$\tfor (uint lightIndex = 0u@ lightIndex < lightCount@
    ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition, ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition)@$\t\t#endif$\t\tfloat NdotH = max( 0, dot( normalize( light.direction
    + ViewDirection ), WorldNormal ))@$\t\tNdotH = NdotH * NdotH * sign( light.distanceAttenuation
    * light.shadowAttenuation )@$\t\tExp = max( Exp, exp(( NdotH - 1 ) / max( 0.0001,
    Roughness * NdotH )))@$\t\tHiPoint = min( HiPoint, ( 1.0 / max( 0.0001, pi *
    Roughness * NdotH * NdotH )))@$\t}$#endif$return float2( HiPoint, Exp )@;2;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Float;False;True;Roughness;FLOAT;0;In;;Float;False;True;pi;FLOAT;0;In;;Float;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Float;False;AdditionalLights_BeckmanNDF10x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;60;-2000,-1392;Inherit;False;11;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;2;FLOAT2;0,0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;5;FLOAT2;0,0;False;6;FLOAT2;0,0;False;7;FLOAT2;0,0;False;8;FLOAT2;0,0;False;9;FLOAT2;0,0;False;10;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;316;-576,-1184;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;315;-592,-1200;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;314;-608,-1216;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;313;-624,-1232;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;312;-640,-1248;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;310;-656,-1264;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;317;-560,-1168;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;424;-544,-1152;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;387;-1104,-1392;Inherit;False;Blend
    Internally;True;0;2;6;In 0;In 1;Object;-1;20;0;FLOAT2;0,0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleMinOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;391;-1520,-1328;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;392;-1520,-1232;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;393;-1392,-1328;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;394;-1232,-1328;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;1E-06;False;1;FLOAT;0\nNode;AmplifyShaderEditor.BreakToComponentsNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;390;-1680,-1328;Inherit;False;FLOAT2;1;0;FLOAT2;0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;388;-1744,-1136;Inherit;False;Base
    HiPoint;1;13;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;254;-816,-1392;Inherit;False;Beckman;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleDivideOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;374;-1632,-240;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;125;-2368,-240;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tfor
    (uint lightIndex = 0u@ lightIndex < lightCount@ ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION
    >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat RdotV
    = max( 0, dot( normalize( reflect( -light.direction, WorldNormal )), ViewDirection
    ))@$\t\tNDF = max( NDF, pow( RdotV, GlossVec.y ) * GlossVec.x * GlossVec.z *
    sign( light.distanceAttenuation * light.shadowAttenuation ))@$\t}$#endif$return
    NDF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;GlossVec;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_PhongNDF10x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;126;-2368,-64;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN(
    lightCount )$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition, ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition)@$\t\t#endif$\t\tfloat RdotV = max( 0, dot( normalize( reflect(
    -light.direction, WorldNormal )), ViewDirection ))@$\t\tNDF = max( NDF, pow(
    RdotV, GlossVec.y ) * GlossVec.x * GlossVec.z * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Float;False;True;GlossVec;FLOAT3;0,0,0;In;;Float;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_PhongNDF12x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;127;-2368,112;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_PHONGNDF(Light)\\$\t\tfloat
    RdotV = max( 0, dot( normalize( reflect( -light.direction, WorldNormal )), ViewDirection
    ))@\\$\t\tNDF = max( NDF, pow( RdotV, GlossVec.y ) * GlossVec.x * GlossVec.z
    * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\tfor
    (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_PHONGNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_PHONGNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Float;False;True;GlossVec;FLOAT3;0,0,0;In;;Float;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_PhongNDF14x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;128;-2368,304;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_PHONGNDF(Light)\\$\t\tfloat
    RdotV = max( 0, dot( normalize( reflect( -light.direction, WorldNormal )), ViewDirection
    ))@\\$\t\tNDF = max( NDF, pow( RdotV, GlossVec.y ) * GlossVec.x * GlossVec.z
    * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_PHONGNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_PHONGNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;GlossVec;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_PhongNDF17.0x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;427;-2368,496;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_PHONGNDF(Light)\\$\t\tfloat
    RdotV = max( 0, dot( normalize( reflect( -light.direction, WorldNormal )), ViewDirection
    ))@\\$\t\tNDF = max( NDF, pow( RdotV, GlossVec.y ) * GlossVec.x * GlossVec.z
    * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_CLUSTER_LIGHT_LOOP$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light
    = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_PHONGNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_PHONGNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;GlossVec;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_PhongNDF17.1x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;129;-1984,-240;Inherit;False;11;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;372;-1984,96;Inherit;False;87;glossVec;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SwizzleNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;373;-1808,96;Inherit;False;FLOAT;1;1;2;3;1;0;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;311;-672,-256;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;255;-832,-240;Inherit;False;Phong;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;65;-2928,-752;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;264;-2960,-624;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;150;-2928,-880;Inherit;False;147;_PI;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;64;-2960,-1136;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;62;-2960,-1264;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;119;-2960,-192;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;120;-2960,-64;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;122;-2960,64;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;123;-2928,192;Inherit;False;87;glossVec;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;124;-2928,320;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;121;-2960,448;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.DynamicAppendNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;224;-4496,1744;Inherit;False;FLOAT2;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;229;-4336,1744;Inherit;False;2;0;FLOAT2;0,0;False;1;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.ScaleNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;231;-4208,1744;Inherit;False;5;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;24;-4592,960;Inherit;False;Compute
    Roughness;True;1;2;4;In 0;In 1;Object;-1;20;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;230;-4560,1936;Inherit;False;Constant;_NearZero;NearZero;0;0;Create;True;0;0;0;False;0;False;0.001;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;354;-4016,1744;Inherit;False;Precompute
    Anisotropic Vector;True;0;2;8;In 0;In 1;Object;-1;20;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;355;-4208,1824;Inherit;False;Aniso
    Vector;2;11;False;1;0;FLOAT2;0.05,0.05;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.TauNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;294;-4384,1520;Inherit;False;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;291;-4384,1424;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleDivideOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;292;-4256,1424;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.DynamicAppendNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;293;-4048,1312;Inherit;False;FLOAT3;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;299;-4384,1232;Inherit;False;Custom
    Specular Power;True;0;2;7;In 0;In 1;Object;-1;20;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;290;-4512,1376;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;26;-4400,-944;Inherit;False;worldNormalValue;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;301;-4608,1248;Inherit;False;Specular
    Power;1;9;False;1;0;FLOAT;36;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;377;-4256,1520;Inherit;False;_Tau;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;19;-5104,1024;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.OneMinusNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;21;-4944,1024;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;22;-4784,960;Inherit;False;Roughness;1;8;False;1;0;FLOAT;0.5;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;23;-4752,1024;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.DotProductOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;47;-5040,656;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;49;-4912,656;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;51;-4912,752;Inherit;False;NdotV;1;5;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;52;-4752,656;Inherit;False;Custom
    Dot Product;True;0;2;3;In 0;In 1;Object;-1;20;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;199;-4848,240;Inherit;False;Custom
    Tangents;True;0;2;2;In 0;In 1;Object;-1;20;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;204;-5072,464;Inherit;False;World
    Bitangent;3;1;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;202;-4848,400;Inherit;False;Option;False;0;2;2;In
    0;In 1;Instance;199;20;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;207;-5104,960;Inherit;False;smoothness;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;223;-4656,1840;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.NormalizeNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;201;-5056,400;Inherit;False;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.NormalizeNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;200;-5056,240;Inherit;False;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;226;-4832,1744;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;215;-4960,1840;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SqrtOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;351;-4800,1840;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;216;-5104,1904;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;345;-5104,1840;Half;False;Constant;_1Half;_1Half;0;0;Create;True;0;0;0;False;0;False;1;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleDivideOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;227;-4656,1744;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.OneMinusNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;225;-5024,1744;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;222;-5232,1744;Inherit;False;207;smoothness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;45;-5056,0;Inherit;False;worldPosValue;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SwizzleNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;39;-5072,-272;Inherit;False;FLOAT2;0;1;2;3;1;0;FLOAT4;0,0,0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;43;-4880,-272;Inherit;False;ScreenUV;-1;True;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;41;-5104,-528;Inherit;False;View
    Direction;3;4;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;42;-4880,-528;Inherit;False;worldViewDir;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;32;-4720,-944;Inherit;False;Normal
    Space;False;0;2;1;Tangent Space;World Space;Object;-1;20;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;35;-5104,-944;Inherit;False;Normal;3;2;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;38;-4944,-784;Inherit;False;World
    Normal;3;3;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;88;-4912,1312;Inherit;False;Compute
    Gloss;True;0;2;5;In 0;In 1;Object;-1;20;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;89;-5088,1312;Inherit;False;Gloss;1;7;False;1;0;FLOAT;0.5;False;1;FLOAT;0\nNode;AmplifyShaderEditor.ScaleNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;367;-4672,1376;Inherit;False;40;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.Vector2Node,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;364;-4752,1440;Inherit;False;Constant;_ConsOneTwo;_ConsOneTwo;0;0;Create;True;0;0;0;False;0;False;1,2;0,0;0;3;FLOAT2;0;FLOAT;1;FLOAT;2\nNode;AmplifyShaderEditor.WorldNormalVector,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;34;-4944,-944;Inherit;False;True;1;0;FLOAT3;0,0,1;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.WorldNormalVector,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;33;-5136,-784;Inherit;False;True;1;0;FLOAT3;0,0,1;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;46;-5296,656;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;48;-5280,720;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;20;-5296,1024;Inherit;False;Smoothness;1;6;False;1;0;FLOAT;0.5;False;1;FLOAT;0\nNode;AmplifyShaderEditor.VertexTangentNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;195;-5296,240;Inherit;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.VertexBinormalNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;193;-5296,400;Inherit;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;208;-5296,1904;Inherit;False;Anisotropic;1;10;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;346;-5296,1968;Half;False;Constant;_09half;_0.9half;0;0;Create;True;0;0;0;False;0;False;0.9;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.WorldPosInputsNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;44;-5296,0;Inherit;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.ScreenPosInputsNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;40;-5296,-272;Inherit;False;0;False;0;5;FLOAT4;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.Vector3Node,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;31;-5296,-944;Inherit;False;Constant;_Vector2;Vector
    0;0;0;Create;True;0;0;0;False;0;False;0,0,1;0,0,0;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.ViewDirInputsCoordNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;50;-5296,-528;Inherit;False;World;True;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.PiNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;146;-4080,960;Inherit;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;147;-3888,960;Inherit;False;_PI;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;53;-4464,656;Inherit;False;_NdotV;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;30;-4592,-1344;Inherit;False;Shadow
    Mask;4;12;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;27;-4848,-1344;Inherit;False;11;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0,0,0,0;False;2;FLOAT4;0,0,0,0;False;3;FLOAT4;0,0,0,0;False;4;FLOAT4;0,0,0,0;False;5;FLOAT4;0,0,0,0;False;6;FLOAT4;0,0,0,0;False;7;FLOAT4;0,0,0,0;False;8;FLOAT4;0,0,0,0;False;9;FLOAT4;0,0,0,0;False;10;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;36;-5104,-1344;Half;False;#if
    defined(SHADOWS_SHADOWMASK) && defined(LIGHTMAP_ON)$return SAMPLE_SHADOWMASK(
    LightmapUV.xy )@$#elif !defined (LIGHTMAP_ON)$return unity_ProbesOcclusion@$#else$return
    half4( 1, 1, 1, 1 )@$#endif;4;Create;1;True;LightmapUV;FLOAT2;0,0;In;;Inherit;False;Calculate
    Shadow Mask 10x;True;False;0;;False;1;0;FLOAT2;0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;29;-5296,-1344;Inherit;False;Lightmap
    UV;-1;;62271;1940f027d0458684eb0ad486f669d7d5;1,1,0;0;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;37;-5120,-1216;Half;False;#if
    defined(SHADOWS_SHADOWMASK) && defined(LIGHTMAP_ON)$half4 shadowMask = inputData.shadowMask@$#elif
    !defined (LIGHTMAP_ON)$half4 shadowMask = unity_ProbesOcclusion@$#else$half4
    shadowMask = half4(1, 1, 1, 1)@$#endif$$return shadowMask@$;4;Create;0;Calculate
    Shadow Mask;True;False;0;;False;0;1;FLOAT4;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;25;-4304,960;Inherit;False;roughness;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;87;-3904,1312;Inherit;False;glossVec;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;456;-2576,-192;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;457;-2576,-64;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;458;-2576,64;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;460;-2576,448;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;459;-2576,320;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;464;-2576,192;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleDivideOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;383;-1584,800;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;90;-1952,800;Inherit;False;11;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;276;-2368,800;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tfor
    (uint lightIndex = 0u@ lightIndex < lightCount@ ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION
    >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat NdotH
    = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal ))@$\t\tNDF
    = max( NDF, pow( NdotH, GlossVec.y ) * GlossVec.x * GlossVec.z * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$\t}$#endif$return NDF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;GlossVec;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_BlinnPhongNDF10x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;278;-2368,976;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN(
    lightCount )$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition, ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition)@$\t\t#endif$\t\tfloat NdotH = max( 0, dot( normalize( light.direction
    + ViewDirection ), WorldNormal ))@$\t\tNDF = max( NDF, pow( NdotH, GlossVec.y
    ) * GlossVec.x * GlossVec.z * sign( light.distanceAttenuation * light.shadowAttenuation
    ))@$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;GlossVec;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_BlinnPhongNDF12x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;277;-2368,1152;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_BLINNPHONGNDF( Light )\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tNDF = max( NDF, pow( NdotH, GlossVec.y ) * GlossVec.x * GlossVec.z
    * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\tfor
    (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BLINNPHONGNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BLINNPHONGNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;GlossVec;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_BlinnPhongNDF14x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;275;-2368,1344;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_BLINNPHONGNDF(Light)\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tNDF = max( NDF, pow( NdotH, GlossVec.y ) * GlossVec.x * GlossVec.z
    * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BLINNPHONGNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BLINNPHONGNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;GlossVec;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_BlinnPhongNDF17.0x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;428;-2368,1536;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_BLINNPHONGNDF(Light)\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tNDF = max( NDF, pow( NdotH, GlossVec.y ) * GlossVec.x * GlossVec.z
    * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_CLUSTER_LIGHT_LOOP$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light
    = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BLINNPHONGNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_BLINNPHONGNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;GlossVec;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_BlinnPhongNDF17.1x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;381;-1952,1120;Inherit;False;87;glossVec;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SwizzleNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;382;-1760,1120;Inherit;False;FLOAT;1;1;2;3;1;0;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;471;-2592,848;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;472;-2592,976;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;473;-2592,1104;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;474;-2592,1488;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;475;-2592,1360;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;476;-2592,1232;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;91;-2960,848;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;92;-2960,976;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;296;-2928,1232;Inherit;False;87;glossVec;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;94;-2960,1104;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;95;-2928,1360;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;93;-2960,1488;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;318;-624,784;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;256;-816,800;Inherit;False;Blinn-Phong;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;132;-1968,1840;Inherit;False;11;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;137;-2352,1840;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tfor
    (uint lightIndex = 0u@ lightIndex < lightCount@ ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION
    >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat NdotH
    = acos( max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    )))@$\t\tNDF = max( NDF, exp( -NdotH * NdotH / Roughness ) * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$\t}$#endif$return NDF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GaussianNDF10x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;136;-2352,2016;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN(
    lightCount )$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition, ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition)@$\t\t#endif$\t\tfloat NdotH = acos( max( 0, dot( normalize( light.direction
    + ViewDirection ), WorldNormal )))@$\t\tNDF = max( NDF, exp( -NdotH * NdotH /
    Roughness ) * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tLIGHT_LOOP_END$#endif$return
    NDF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GaussianNDF12x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;139;-2352,2192;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_GAUSSIANNDF(Light)\\$\t\tfloat
    NdotH = acos( max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    )))@\\$\t\tNDF = max( NDF, exp( -NdotH * NdotH / Roughness ) * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_FORWARD_PLUS$\tfor (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GAUSSIANNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GAUSSIANNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GaussianNDF14x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;138;-2352,2384;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_GAUSSIANNDF(Light)\\$\t\tfloat
    NdotH = acos( max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    )))@\\$\t\tNDF = max( NDF, exp( -NdotH * NdotH / Roughness ) * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_FORWARD_PLUS$\t[loop] for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GAUSSIANNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GAUSSIANNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GaussianNDF17.0x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;429;-2352,2576;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_GAUSSIANNDF(Light)\\$\t\tfloat
    NdotH = acos( max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    )))@\\$\t\tNDF = max( NDF, exp( -NdotH * NdotH / Roughness ) * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_CLUSTER_LIGHT_LOOP$\t[loop] for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GAUSSIANNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GAUSSIANNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GaussianNDF17.1x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;141;-2928,2400;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;135;-2960,2528;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;133;-2960,1888;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;308;-2768,2272;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0.0001;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;307;-2928,2272;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;142;-3120,2272;Inherit;False;25;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;319;-592,1824;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;257;-752,1840;Inherit;False;Gaussian;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;389;-1712,-1056;Inherit;False;Base
    Exp;1;14;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;302;-2768,-1008;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0.0001;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;269;-2928,-1008;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;83;-3120,-1008;Inherit;False;25;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;157;-2336,2896;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tfloat RoughSqr = Roughness * Roughness@$\tuint
    lightCount = GetAdditionalLightsCount()@$\tfor (uint lightIndex = 0u@ lightIndex
    < lightCount@ ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light
    = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat NdotH
    = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal ))@$\t\tNdotH
    = NdotH * NdotH@$\t\tfloat TanNdotH = ( 1 - NdotH) / max( 0.0001, NdotH)@$\t\tfloat
    distr = max( 0.0001, Roughness ) / ( max( 0.0001, NdotH) * ( RoughSqr + TanNdotH
    ))@$\t\tNDF = max( NDF,  PiInv * distr * distr  * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$\t}$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;PiInv;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GGXNDF10x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;156;-2336,3088;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tfloat RoughSqr = Roughness * Roughness@$\tuint
    lightCount = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN( lightCount )$\t\t#if
    ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition,
    ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@$\t\tNdotH = NdotH * NdotH@$\t\tfloat TanNdotH = ( 1 - NdotH) / max( 0.0001,
    NdotH)@$\t\tfloat distr = max( 0.0001, Roughness ) / ( max( 0.0001, NdotH ) *
    ( RoughSqr + TanNdotH ))@$\t\tNDF = max( NDF,  PiInv * distr * distr * sign(
    light.distanceAttenuation * light.shadowAttenuation ))@$\tLIGHT_LOOP_END$#endif$return
    NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;PiInv;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GGXNDF12x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;159;-2336,3280;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\tfloat RoughSqr = Roughness * Roughness@$\t#define
    SUM_GGXNDF(Light)\\$\t\tfloat NdotH = max( 0, dot( normalize( light.direction
    + ViewDirection ), WorldNormal ))@\\$\t\tNdotH = NdotH * NdotH@\\$\t\tfloat TanNdotH
    = ( 1 - NdotH) / max( 0.0001, NdotH)@\\$\t\tfloat distr = max( 0.0001, Roughness
    ) / ( max( 0.0001, NdotH ) * ( RoughSqr + TanNdotH ))@\\$\t\tNDF = max( NDF, 
    PiInv * distr * distr * sign( light.distanceAttenuation * light.shadowAttenuation
    ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_FORWARD_PLUS$\tfor (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t{$\t\t\tSUM_GGXNDF(light)@$\t\t}$\t\t#endif$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN(
    pixelLightCount )$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition,
    ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask,
    meshRenderingLayers))$\t\t{$\t\t\tSUM_GGXNDF(light)@$\t\t}$\t\t#endif$\tLIGHT_LOOP_END$#endif$return
    NDF@;1;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;PiInv;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GGXNDF14x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;158;-2336,3504;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\tfloat RoughSqr = Roughness * Roughness@$\t#define
    SUM_GGXNDF(Light)\\$\t\tfloat NdotH = max( 0, dot( normalize( light.direction
    + ViewDirection ), WorldNormal ))@\\$\t\tNdotH = NdotH * NdotH@\\$\t\tfloat TanNdotH
    = ( 1 - NdotH) / max( 0.0001, NdotH)@\\$\t\tfloat distr = max( 0.0001, Roughness
    ) / ( max( 0.0001, NdotH ) * ( RoughSqr + TanNdotH ))@\\$\t\tNDF = max( NDF, 
    PiInv * distr * distr * sign( light.distanceAttenuation * light.shadowAttenuation
    ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_FORWARD_PLUS$\t[loop] for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GGXNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GGXNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;PiInv;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GGXNDF17.0x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;430;-2336,3728;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\tfloat RoughSqr = Roughness * Roughness@$\t#define
    SUM_GGXNDF(Light)\\$\t\tfloat NdotH = max( 0, dot( normalize( light.direction
    + ViewDirection ), WorldNormal ))@\\$\t\tNdotH = NdotH * NdotH@\\$\t\tfloat TanNdotH
    = ( 1 - NdotH) / max( 0.0001, NdotH)@\\$\t\tfloat distr = max( 0.0001, Roughness
    ) / ( max( 0.0001, NdotH ) * ( RoughSqr + TanNdotH ))@\\$\t\tNDF = max( NDF, 
    PiInv * distr * distr * sign( light.distanceAttenuation * light.shadowAttenuation
    ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_CLUSTER_LIGHT_LOOP$\t[loop] for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GGXNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_GGXNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;PiInv;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_GGXNDF17.1x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;497;-2576,2928;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;498;-2576,3056;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;499;-2576,3184;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;500;-2576,3312;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;502;-2576,3584;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;501;-2576,3712;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;153;-2960,2928;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;161;-2928,3584;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;155;-2960,3712;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;154;-2960,3056;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;160;-2960,3184;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;162;-2928,3312;Inherit;False;25;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;165;-2960,3456;Inherit;False;Constant;_ApproxPIInverse2;Approx.
    PI Inverse;0;0;Create;True;0;0;0;False;0;False;0.3183099;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;152;-1968,2896;Inherit;False;11;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;258;-704,2896;Inherit;False;GGX;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;320;-576,2880;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;483;-2560,1888;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;484;-2560,2016;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;485;-2560,2144;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;490;-2560,2272;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;486;-2560,2528;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;487;-2560,2400;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;504;-2576,3456;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;172;-2320,4048;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tfor
    (uint lightIndex = 0u@ lightIndex < lightCount@ ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION
    >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat NdotH
    = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal ))@$\t\tfloat
    distr = NdotH * NdotH * ( Roughness - 1.0 ) + 1.0@$\t\tNDF = max( NDF, ( max(
    0.00000001, Roughness ) / ( pi * distr * distr )) * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$\t}$#endif$return NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzNDF10x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;171;-2320,4240;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN(
    lightCount )$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition, ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition)@$\t\t#endif$\t\tfloat NdotH = max( 0, dot( normalize( light.direction
    + ViewDirection ), WorldNormal ))@$\t\tfloat distr = NdotH * NdotH * ( Roughness
    - 1.0 ) + 1.0@$\t\tNDF = max( NDF, ( max( 0.00000001, Roughness ) / ( pi * distr
    * distr )) * sign( light.distanceAttenuation * light.shadowAttenuation ))@$\tLIGHT_LOOP_END$#endif$return
    NDF@;1;Create;6;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzNDF12x;False;False;0;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;174;-2320,4432;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_TROWREITZNDF(Light)\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tfloat distr = NdotH * NdotH * ( Roughness - 1.0 ) + 1.0@\\$\t\tNDF
    = max( NDF, ( max( 0.00000001, Roughness ) / ( pi * distr * distr )) * sign(
    light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData inputData
    = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\tfor
    (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzNDF14x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;173;-2320,4656;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_TROWREITZNDF(Light)\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tfloat distr = NdotH * NdotH * ( Roughness - 1.0 ) + 1.0@\\$\t\tNDF
    = max( NDF, ( max( 0.00000001, Roughness ) / ( pi * distr * distr )) * sign(
    light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData inputData
    = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzNDF17.0x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;431;-2320,4880;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_TROWREITZNDF(Light)\\$\t\tfloat
    NdotH = max( 0, dot( normalize( light.direction + ViewDirection ), WorldNormal
    ))@\\$\t\tfloat distr = NdotH * NdotH * ( Roughness - 1.0 ) + 1.0@\\$\t\tNDF
    = max( NDF, ( max( 0.00000001, Roughness ) / ( pi * distr * distr )) * sign(
    light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData inputData
    = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_CLUSTER_LIGHT_LOOP$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light
    = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZNDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZNDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;7;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;Roughness;FLOAT;0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzNDF17.1x;False;False;0;;False;7;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;167;-1920,4048;Inherit;False;11;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;168;-2960,4096;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;169;-2960,4224;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;175;-2960,4352;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;334;-2784,4480;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;177;-2992,4480;Inherit;False;25;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;179;-2928,4608;Inherit;False;147;_PI;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;176;-2928,4736;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;170;-2960,4880;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;321;-560,4032;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;259;-784,4048;Inherit;False;Trowbridge
    Reitz;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;511;-2560,4096;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;513;-2560,4352;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;514;-2560,4480;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;515;-2560,4880;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;516;-2560,4736;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;518;-2560,4608;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;203;-5072,320;Inherit;False;World
    Tangent;3;0;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;196;-4560,240;Inherit;False;worldTangent;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;134;-2960,2016;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;140;-2960,2144;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;512;-2560,4224;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;197;-4592,400;Inherit;False;worldBitangent;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;209;-3664,1744;Inherit;False;anisoVec;-1;True;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;180;-1872,5200;Inherit;False;11;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;184;-2320,5456;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN(
    lightCount )$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition, ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition)@$\t\t#endif$\t\tfloat3 HalfDir = normalize( light.direction +
    ViewDirection )@$\t\tfloat3 Dots = float3( dot( HalfDir, WorldTangent ) / AspectVec.x,
    //HdotX$\t\t\t\tdot( HalfDir, WorldBitangent ) / AspectVec.y, //HdotY$\t\t\t\t
    max( 0, dot( HalfDir, WorldNormal )))@ //NdotH$\t\tfloat Distr = dot( normalize(
    Dots ), Dots )@$\t\tNDF = max( NDF, ( 1.0 / max( 0.00001, Distr * Distr * pi
    * AspectVec.x * AspectVec.y )) * sign( light.distanceAttenuation * light.shadowAttenuation
    ))@$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;8;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzAnisoNDF12x;False;False;0;;False;8;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT2;0,0;False;6;FLOAT;0;False;7;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;187;-2320,5696;Inherit;False;float
    NDF = 0.0001@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_TROWREITZANISONDF(Light)\\$\t\tfloat3
    HalfDir = normalize( light.direction + ViewDirection )@\\$\t\tfloat3 Dots = float3(
    dot( HalfDir,WorldTangent )/ AspectVec.x, dot( HalfDir,WorldBitangent )/ AspectVec.y,
    max( 0, dot( HalfDir,WorldNormal )))@\\$\t\tfloat Distr = dot( Dots, Dots )@\\$\t\tNDF
    = max( NDF, (1.0 / max( 0.00001, Distr * Distr * pi * AspectVec.x * AspectVec.y
    )) * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\tfor
    (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZANISONDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZANISONDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;9;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzAnisoNDF14x;False;False;0;;False;9;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT2;0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT3;0,0,0;False;6;FLOAT2;0,0;False;7;FLOAT;0;False;8;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;186;-2320,5968;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_TROWREITZANISONDF(Light)\\$\t\tfloat3
    HalfDir = normalize( light.direction + ViewDirection )@\\$\t\tfloat3 Dots = float3(
    dot( HalfDir,WorldTangent )/ AspectVec.x, dot( HalfDir,WorldBitangent )/ AspectVec.y,
    max( 0, dot( HalfDir,WorldNormal )))@\\$\t\tfloat Distr = dot( Dots, Dots )@\\$\t\tNDF
    = max( NDF, (1.0 / max( 0.00001, Distr * Distr * pi * AspectVec.x * AspectVec.y
    )) * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_FORWARD_PLUS$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light =
    GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZANISONDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZANISONDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;9;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzAnisoNDF17.0x;False;False;0;;False;9;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT2;0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT3;0,0,0;False;6;FLOAT2;0,0;False;7;FLOAT;0;False;8;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;432;-2320,6240;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_TROWREITZANISONDF(Light)\\$\t\tfloat3
    HalfDir = normalize( light.direction + ViewDirection )@\\$\t\tfloat3 Dots = float3(
    dot( HalfDir,WorldTangent )/ AspectVec.x, dot( HalfDir,WorldBitangent )/ AspectVec.y,
    max( 0, dot( HalfDir,WorldNormal )))@\\$\t\tfloat Distr = dot( Dots, Dots )@\\$\t\tNDF
    = max( NDF, (1.0 / max( 0.00001, Distr * Distr * pi * AspectVec.x * AspectVec.y
    )) * sign( light.distanceAttenuation * light.shadowAttenuation ))@$$\tInputData
    inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV = ScreenUV@$\tinputData.positionWS
    = WorldPosition@$$\tuint meshRenderingLayers = GetMeshRenderingLayer()@$\tuint
    pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if USE_CLUSTER_LIGHT_LOOP$\t[loop]
    for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT, MAX_VISIBLE_LIGHTS)@
    lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight light
    = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef _LIGHT_LAYERS$\t\tif
    (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZANISONDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_TROWREITZANISONDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;9;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzAnisoNDF17.1x;False;False;0;;False;9;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT2;0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT3;0,0,0;False;6;FLOAT2;0,0;False;7;FLOAT;0;False;8;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;185;-2320,5200;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tfor
    (uint lightIndex = 0u@ lightIndex < lightCount@ ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION
    >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat3
    HalfDir = normalize( light.direction + ViewDirection )@$\t\tfloat3 Dots = float3(
    dot( HalfDir, WorldTangent ) / AspectVec.x, //HdotX$\t\t\t\tdot( HalfDir, WorldBitangent
    ) / AspectVec.y, //HdotY$\t\t\t\t max( 0, dot( HalfDir, WorldNormal )))@ //NdotH$\t\tfloat
    Distr = dot( Dots, Dots )@$\t\tNDF = max( NDF, ( 1.0 / max( 0.00001, Distr *
    Distr * pi * AspectVec.x * AspectVec.y )) * sign( light.distanceAttenuation *
    light.shadowAttenuation ))@$\t}$#endif$return NDF@;1;Create;8;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_TrowReitzAnisoNDF10x;False;False;0;;False;8;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT2;0,0;False;6;FLOAT;0;False;7;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;181;-2960,5248;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;182;-2960,5376;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;205;-2960,5504;Inherit;False;196;worldTangent;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;228;-2928,5920;Inherit;False;209;anisoVec;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;218;-2928,6048;Inherit;False;147;_PI;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;206;-2960,5632;Inherit;False;197;worldBitangent;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;188;-2960,5792;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;189;-2928,6176;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;183;-2960,6320;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;322;-528,5184;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;260;-848,5200;Inherit;False;Trowbridge
    Reitz Anisotropic;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;526;-2560,5248;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;527;-2560,5504;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;534;-2560,5376;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;528;-2560,5792;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;530;-2560,6320;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;531;-2560,6176;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;532;-2560,6048;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;536;-2560,5632;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;529;-2560,5920;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;244;-2304,6624;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tfor
    (uint lightIndex = 0u@ lightIndex < lightCount@ ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION
    >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat3
    HalfDir = normalize( light.direction + ViewDirection )@\\$\t\tfloat NdotL = max(
    0, dot( light.direction, WorldNormal ))@\\$\t\tfloat4 Dots = float4( dot( HalfDir,
    WorldTangent ) / AspectVec.x,\t\t//HdotX$\t\t\t\tdot( HalfDir, WorldBitangent
    ) / AspectVec.y,\t//HdotY$\t\t\t\t max( 0, dot( HalfDir, WorldNormal )))@\t\t//NdotH$\t\tfloat
    Exp = -( Dots.x * Dots.x + Dots.y * Dots.y ) / Dots.z * Dots.z@\\$\t\tfloat Distr
    = 1.0 / ( 4.0 * pi * AspectVec.x * AspectVec.y * max( 0.5, sqrt( NdotV * NdotL)))@\\$\t\tNDF
    = max( NDF, Distr * exp( Exp ) * sign( light.distanceAttenuation * light.shadowAttenuation
    ))@$\t}$#endif$return NDF@;1;Create;9;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_WardAnisoNDF10x;False;False;0;;False;9;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT;0;False;6;FLOAT2;0,0;False;7;FLOAT;0;False;8;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;245;-2304,6896;Inherit;False;float
    NDF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN(
    lightCount )$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition, ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition)@$\t\t#endif$\t\tfloat3 HalfDir = normalize( light.direction +
    ViewDirection )@\\$\t\tfloat NdotL = max( 0, dot( light.direction, WorldNormal
    ))@\\$\t\tfloat3 Dots = float3( dot( HalfDir, WorldTangent ) / AspectVec.x,\t\t//HdotX$\t\t\t\tdot(
    HalfDir, WorldBitangent ) / AspectVec.y,\t//HdotY$\t\t\t\t max( 0, dot( HalfDir,
    WorldNormal )))@\t\t//NdotH$\t\tfloat Exp = -( Dots.x * Dots.x + Dots.y * Dots.y
    ) / Dots.z * Dots.z@\\$\t\tfloat Distr = 1.0 / ( 4.0 * pi * AspectVec.x * AspectVec.y
    * max( 0.5, sqrt( NdotV * NdotL)))@\\$\t\tNDF = max( NDF, Distr * exp( Exp )
    * sign( light.distanceAttenuation * light.shadowAttenuation ))@$\tLIGHT_LOOP_END$#endif$return
    NDF@;1;Create;9;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_WardAnisoNDF12x;False;False;0;;False;9;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT;0;False;6;FLOAT2;0,0;False;7;FLOAT;0;False;8;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;246;-2304,7168;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_WARDANISONDF(Light)\\$\t\tfloat3
    HalfDir = normalize( light.direction + ViewDirection )@\\$\t\tfloat NdotL = max(
    0, dot( light.direction, WorldNormal ))@\\$\t\tfloat3 Dots = float3( dot( HalfDir,WorldTangent
    )/ AspectVec.x, dot( HalfDir,WorldBitangent )/ AspectVec.y, max( 0, dot( HalfDir,WorldNormal
    )))@\\$\t\tfloat Exp = -( Dots.x * Dots.x + Dots.y * Dots.y ) / Dots.z * Dots.z@\\$\t\tfloat
    Distr = 1.0 / ( 4.0 * pi * AspectVec.x * AspectVec.y * max( 0.5, sqrt( NdotV
    * NdotL)))@\\$\t\tNDF = max( NDF, Distr * exp( Exp ) * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_FORWARD_PLUS$\tfor (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_WARDANISONDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_WARDANISONDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;10;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Float;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Float;False;True;NdotV;FLOAT;0;In;;Float;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Float;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Float;False;AdditionalLights_WardAnisoNDF14x;False;False;0;;False;10;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT2;0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT3;0,0,0;False;6;FLOAT;0;False;7;FLOAT2;0,0;False;8;FLOAT;0;False;9;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;247;-2304,7456;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_WARDANISONDF(Light)\\$\t\tfloat3
    HalfDir = normalize( light.direction + ViewDirection )@\\$\t\tfloat NdotL = max(
    0, dot( light.direction, WorldNormal ))@\\$\t\tfloat3 Dots = float3( dot( HalfDir,WorldTangent
    )/ AspectVec.x, dot( HalfDir,WorldBitangent )/ AspectVec.y, max( 0, dot( HalfDir,WorldNormal
    )))@\\$\t\tfloat Exp = -( Dots.x * Dots.x + Dots.y * Dots.y ) / Dots.z * Dots.z@\\$\t\tfloat
    Distr = 1.0 / ( 4.0 * pi * AspectVec.x * AspectVec.y * max( 0.5, sqrt( NdotV
    * NdotL)))@\\$\t\tNDF = max( NDF, Distr * exp( Exp ) * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_FORWARD_PLUS$\t[loop] for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_WARDANISONDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_WARDANISONDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;10;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_WardAnisoNDF17.0x;False;False;0;;False;10;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT2;0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT3;0,0,0;False;6;FLOAT;0;False;7;FLOAT2;0,0;False;8;FLOAT;0;False;9;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;433;-2304,7744;Inherit;False;float
    NDF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_WARDANISONDF(Light)\\$\t\tfloat3
    HalfDir = normalize( light.direction + ViewDirection )@\\$\t\tfloat NdotL = max(
    0, dot( light.direction, WorldNormal ))@\\$\t\tfloat3 Dots = float3( dot( HalfDir,WorldTangent
    )/ AspectVec.x, dot( HalfDir,WorldBitangent )/ AspectVec.y, max( 0, dot( HalfDir,WorldNormal
    )))@\\$\t\tfloat Exp = -( Dots.x * Dots.x + Dots.y * Dots.y ) / Dots.z * Dots.z@\\$\t\tfloat
    Distr = 1.0 / ( 4.0 * pi * AspectVec.x * AspectVec.y * max( 0.5, sqrt( NdotV
    * NdotL)))@\\$\t\tNDF = max( NDF, Distr * exp( Exp ) * sign( light.distanceAttenuation
    * light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_CLUSTER_LIGHT_LOOP$\t[loop] for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_WARDANISONDF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_WARDANISONDF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return NDF@;1;Create;10;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldTangent;FLOAT3;0,0,0;In;;Inherit;False;True;WorldBitangent;FLOAT3;0,0,0;In;;Inherit;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;AspectVec;FLOAT2;0,0;In;;Inherit;False;True;pi;FLOAT;0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_WardAnisoNDF17.1x;False;False;0;;False;10;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT2;0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT3;0,0,0;False;6;FLOAT;0;False;7;FLOAT2;0,0;False;8;FLOAT;0;False;9;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;239;-1872,6624;Inherit;False;11;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;234;-2960,6656;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;238;-2960,6784;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;236;-2960,7200;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;323;-512,6608;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;261;-736,6624;Inherit;False;Ward
    Anisotropic;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;237;-2960,6912;Inherit;False;196;worldTangent;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;243;-2960,7040;Inherit;False;197;worldBitangent;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;252;-2928,7328;Inherit;False;53;_NdotV;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;240;-2928,7472;Inherit;False;209;anisoVec;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;241;-2928,7600;Inherit;False;147;_PI;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;242;-2928,7728;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;235;-2960,7872;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;546;-2560,6656;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;547;-2560,6912;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;548;-2560,6784;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;553;-2560,7040;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;549;-2560,7200;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;556;-2560,7328;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;550;-2560,7872;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;551;-2560,7728;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;552;-2560,7600;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;554;-2560,7472;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SwitchBySRPVersionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;418;-1888,8144;Inherit;False;11;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;569;-2544,8176;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;571;-2544,8304;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;573;-2544,8432;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;575;-2544,8704;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;576;-2544,8560;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;419;-2320,8144;Inherit;False;float
    GSF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tfor
    (uint lightIndex = 0u@ lightIndex < lightCount@ ++lightIndex)$\t{$\t\t#if ASE_SRP_VERSION
    >= 100000$\t\tLight light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#else$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition)@$\t\t#endif$\t\tfloat3
    HalfDir = normalize(light.direction + ViewDirection)@ // Half Direction per Light$\t\tfloat
    NdotH = max( 0, dot( WorldNormal, HalfDir ))@$\t\tGSF = max( GSF, dot( HalfDir,
    HalfDir ) * ( NdotH * NdotH * NdotH * NdotH ) * smoothstep( 0, 0.01, Light.distanceAttenuation
    * Light.shadowAttenuation ))@$\t}$#endif$return GSF@;1;Create;4;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_DeurGSF10x;False;False;0;;False;4;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;420;-2320,8288;Inherit;False;float
    GSF = 0@$#ifdef _ADDITIONAL_LIGHTS$\tuint lightCount = GetAdditionalLightsCount()@$\tLIGHT_LOOP_BEGIN(
    lightCount )$\t\t#if ASE_SRP_VERSION >= 100000$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition, ShadowMask)@$\t\t#else$\t\tLight light = GetAdditionalLight(lightIndex,
    WorldPosition)@$\t\t#endif$\t\tfloat3 HalfDir = normalize(light.direction + ViewDirection)@
    // Half Direction per Light$\t\tfloat NdotH = max( 0, dot( WorldNormal, HalfDir
    ))@$\t\tGSF = max( GSF, dot( HalfDir, HalfDir ) * ( NdotH * NdotH * NdotH * NdotH
    ) * smoothstep( 0, 0.01, Light.distanceAttenuation * Light.shadowAttenuation
    ))@$\tLIGHT_LOOP_END$#endif$return GSF@;1;Create;4;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_DeurGSF12x;False;False;0;;False;4;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;422;-2320,8432;Inherit;False;float
    GSF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_DEURGSF(Light)\\$\t\tfloat3
    HalfDir = normalize(light.direction + ViewDirection)@\\$\t\tfloat NdotH = max(
    0, dot( WorldNormal, HalfDir ))@\\$\t\tGSF = max( GSF, dot( HalfDir, HalfDir
    ) * ( NdotH * NdotH * NdotH * NdotH ) * smoothstep( 0, 0.01, Light.distanceAttenuation
    * Light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_FORWARD_PLUS$\tfor (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_DEURGSF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_DEURGSF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return GSF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_DeurGSF14x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;421;-2320,8608;Inherit;False;float4
    GSF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_DEURGSF(Light)\\$\t\tfloat3
    HalfDir = normalize(light.direction + ViewDirection)@\\$\t\tfloat NdotH = max(
    0, dot( WorldNormal, HalfDir ))@\\$\t\tGSF = max( GSF, dot( HalfDir, HalfDir
    ) * ( NdotH * NdotH * NdotH * NdotH ) * smoothstep( 0, 0.01, Light.distanceAttenuation
    * Light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_FORWARD_PLUS$\t[loop] for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tFORWARD_PLUS_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_DEURGSF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_DEURGSF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return GSF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_DeurGSF17.0x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;434;-2320,8784;Inherit;False;float4
    GSF = 0@$#if defined(_ADDITIONAL_LIGHTS)$\t#define SUM_DEURGSF(Light)\\$\t\tfloat3
    HalfDir = normalize(light.direction + ViewDirection)@\\$\t\tfloat NdotH = max(
    0, dot( WorldNormal, HalfDir ))@\\$\t\tGSF = max( GSF, dot( HalfDir, HalfDir
    ) * ( NdotH * NdotH * NdotH * NdotH ) * smoothstep( 0, 0.01, Light.distanceAttenuation
    * Light.shadowAttenuation ))@$$\tInputData inputData = (InputData)0@$\tinputData.normalizedScreenSpaceUV
    = ScreenUV@$\tinputData.positionWS = WorldPosition@$$\tuint meshRenderingLayers
    = GetMeshRenderingLayer()@$\tuint pixelLightCount = GetAdditionalLightsCount()@\t$$\t#if
    USE_CLUSTER_LIGHT_LOOP$\t[loop] for (uint lightIndex = 0@ lightIndex < min(URP_FP_DIRECTIONAL_LIGHTS_COUNT,
    MAX_VISIBLE_LIGHTS)@ lightIndex++)$\t{$\t\tCLUSTER_LIGHT_LOOP_SUBTRACTIVE_LIGHT_CHECK$$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_DEURGSF(
    light )@$\t\t}$\t}$\t#endif$\t$\tLIGHT_LOOP_BEGIN( pixelLightCount )$\t\tLight
    light = GetAdditionalLight(lightIndex, WorldPosition, ShadowMask)@$\t\t#ifdef
    _LIGHT_LAYERS$\t\tif (IsMatchingLightLayer(light.layerMask, meshRenderingLayers))$\t\t#endif$\t\t{$\t\t\tSUM_DEURGSF(
    light )@$\t\t}$\tLIGHT_LOOP_END$#endif$return GSF@;1;Create;5;True;WorldPosition;FLOAT3;0,0,0;In;;Float;False;True;ScreenUV;FLOAT2;0,0;In;;Inherit;False;True;WorldNormal;FLOAT3;0,0,0;In;;Float;False;True;ViewDirection;FLOAT3;0,0,0;In;;Inherit;False;True;ShadowMask;FLOAT4;0,0,0,0;In;;Inherit;False;AdditionalLights_DeurGSF17.1x;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT2;0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT4;0,0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSubtitle,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;423;-624,8144;Inherit;False;Deur;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;425;-496,8128;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;414;-2960,8176;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;413;-2960,8304;Inherit;False;26;worldNormalValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;415;-2928,8560;Inherit;False;43;ScreenUV;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;416;-2960,8432;Inherit;False;42;worldViewDir;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;417;-2960,8704;Inherit;False;28;shadowMaskValue;1;0;OBJECT;;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;442;-2592,-1264;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;448;-2592,-1136;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;439;-2592,-752;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;440;-2592,-624;Inherit;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;444;-2592,-1008;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;446;-2592,-880;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;61;-2960,-1392;Inherit;False;45;worldPosValue;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RelayNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;438;-2592,-1392;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;28;-4400,-1344;Inherit;False;shadowMaskValue;-1;True;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.FunctionSwitch,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;262;-496,-1392;Inherit;False;Normal
    Distribution Function;False;0;9;0;Beckman NDF;Phong NDF;BlinnPhong NDF;Gaussian
    NDF;GGX NDF;Trowbridge Reitz NDF;Trowbridge Reitz Anisotropic NDF;Ward Anisotropic
    NDF;Deur GSF;Object;-1;20;0;FLOAT2;0,0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;11;FLOAT;0;False;12;FLOAT;0;False;13;FLOAT;0;False;14;FLOAT;0;False;15;FLOAT;0;False;16;FLOAT;0;False;17;FLOAT;0;False;18;FLOAT;0;False;19;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;579;-5200,-2592;Inherit;True;SRP
    Additional Lighting PBR;-1;;62272;e09772879c43fff42b9a225d6419f5c9;10,262,0,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;582;-5200,-2272;Inherit;True;SRP
    Additional Lighting PBR;-1;;62274;e09772879c43fff42b9a225d6419f5c9;10,262,1,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;585;-5200,-1952;Inherit;True;SRP
    Additional Lighting PBR;-1;;62276;e09772879c43fff42b9a225d6419f5c9;10,262,2,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;588;-4784,-2592;Inherit;True;SRP
    Additional Lighting PBR;-1;;62278;e09772879c43fff42b9a225d6419f5c9;10,262,3,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;589;-4784,-2272;Inherit;True;SRP
    Additional Lighting PBR;-1;;62280;e09772879c43fff42b9a225d6419f5c9;10,262,4,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;591;-4784,-1952;Inherit;True;SRP
    Additional Lighting PBR;-1;;62282;e09772879c43fff42b9a225d6419f5c9;10,262,5,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;595;-4368,-2592;Inherit;True;SRP
    Additional Lighting PBR;-1;;62284;e09772879c43fff42b9a225d6419f5c9;10,262,6,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;596;-4368,-2272;Inherit;True;SRP
    Additional Lighting PBR;-1;;62286;e09772879c43fff42b9a225d6419f5c9;10,262,7,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;597;-4368,-1952;Inherit;True;SRP
    Additional Lighting PBR;-1;;62288;e09772879c43fff42b9a225d6419f5c9;10,262,8,32,0,199,0,202,0,52,0,24,1,88,0,387,0,299,0,354,0;15;203;FLOAT3;0,0,0;False;204;FLOAT3;0,0,0;False;35;FLOAT3;0,0,0;False;38;FLOAT3;0,0,0;False;41;FLOAT3;0,0,0;False;51;FLOAT;0;False;20;FLOAT;0.5;False;89;FLOAT;0.5;False;22;FLOAT;0.5;False;301;FLOAT;36;False;208;FLOAT;1;False;355;FLOAT2;0.05,0.05;False;30;FLOAT4;0,0,0,0;False;388;FLOAT;0;False;389;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode,
    AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;598;-3968,-2608;Inherit;False;303.6597;131.1795;Credits;;0,0,0,0.5019608;Node
    Made by Tiber Legacy$;0;0\nNode;AmplifyShaderEditor.FunctionOutput, AmplifyShaderEditor,
    Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;0;-48,-1392;Inherit;False;True;-1;Out;0;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nWireConnection;67;0;438;0\nWireConnection;67;1;442;0\nWireConnection;67;2;448;0\nWireConnection;67;3;444;0\nWireConnection;67;4;446;0\nWireConnection;67;5;440;0\nWireConnection;68;0;438;0\nWireConnection;68;1;439;0\nWireConnection;68;2;442;0\nWireConnection;68;3;448;0\nWireConnection;68;4;444;0\nWireConnection;68;5;446;0\nWireConnection;68;6;440;0\nWireConnection;69;0;438;0\nWireConnection;69;1;439;0\nWireConnection;69;2;442;0\nWireConnection;69;3;448;0\nWireConnection;69;4;444;0\nWireConnection;69;5;446;0\nWireConnection;69;6;440;0\nWireConnection;426;0;438;0\nWireConnection;426;1;439;0\nWireConnection;426;2;442;0\nWireConnection;426;3;448;0\nWireConnection;426;4;444;0\nWireConnection;426;5;446;0\nWireConnection;426;6;440;0\nWireConnection;66;0;438;0\nWireConnection;66;1;442;0\nWireConnection;66;2;448;0\nWireConnection;66;3;444;0\nWireConnection;66;4;446;0\nWireConnection;66;5;440;0\nWireConnection;60;0;66;0\nWireConnection;60;1;66;0\nWireConnection;60;2;66;0\nWireConnection;60;3;67;0\nWireConnection;60;4;67;0\nWireConnection;60;5;68;0\nWireConnection;60;6;68;0\nWireConnection;60;7;68;0\nWireConnection;60;8;69;0\nWireConnection;60;9;426;0\nWireConnection;60;10;426;0\nWireConnection;316;0;322;0\nWireConnection;315;0;321;0\nWireConnection;314;0;320;0\nWireConnection;313;0;319;0\nWireConnection;312;0;318;0\nWireConnection;310;0;311;0\nWireConnection;317;0;323;0\nWireConnection;424;0;425;0\nWireConnection;387;0;60;0\nWireConnection;387;1;394;0\nWireConnection;391;0;390;0\nWireConnection;391;1;388;0\nWireConnection;392;0;390;1\nWireConnection;392;1;389;0\nWireConnection;393;0;391;0\nWireConnection;393;1;392;0\nWireConnection;394;0;393;0\nWireConnection;390;0;60;0\nWireConnection;254;0;387;0\nWireConnection;374;0;129;0\nWireConnection;374;1;373;0\nWireConnection;125;0;456;0\nWireConnection;125;1;457;0\nWireConnection;125;2;458;0\nWireConnection;125;3;464;0\nWireConnection;125;4;460;0\nWireConnection;126;0;456;0\nWireConnection;126;1;457;0\nWireConnection;126;2;458;0\nWireConnection;126;3;464;0\nWireConnection;126;4;460;0\nWireConnection;127;0;456;0\nWireConnection;127;1;459;0\nWireConnection;127;2;457;0\nWireConnection;127;3;458;0\nWireConnection;127;4;464;0\nWireConnection;127;5;460;0\nWireConnection;128;0;456;0\nWireConnection;128;1;459;0\nWireConnection;128;2;457;0\nWireConnection;128;3;458;0\nWireConnection;128;4;464;0\nWireConnection;128;5;460;0\nWireConnection;427;0;456;0\nWireConnection;427;1;459;0\nWireConnection;427;2;457;0\nWireConnection;427;3;458;0\nWireConnection;427;4;464;0\nWireConnection;427;5;460;0\nWireConnection;129;0;125;0\nWireConnection;129;1;125;0\nWireConnection;129;2;125;0\nWireConnection;129;3;126;0\nWireConnection;129;4;126;0\nWireConnection;129;5;127;0\nWireConnection;129;6;127;0\nWireConnection;129;7;127;0\nWireConnection;129;8;128;0\nWireConnection;129;9;427;0\nWireConnection;129;10;427;0\nWireConnection;373;0;372;0\nWireConnection;311;0;255;0\nWireConnection;255;0;374;0\nWireConnection;224;0;227;0\nWireConnection;224;1;223;0\nWireConnection;229;0;224;0\nWireConnection;229;1;230;0\nWireConnection;231;0;229;0\nWireConnection;24;0;22;0\nWireConnection;24;1;23;0\nWireConnection;354;0;231;0\nWireConnection;354;1;355;0\nWireConnection;291;0;290;0\nWireConnection;291;1;364;2\nWireConnection;292;0;291;0\nWireConnection;292;1;294;0\nWireConnection;293;0;88;0\nWireConnection;293;1;299;0\nWireConnection;293;2;292;0\nWireConnection;299;0;290;0\nWireConnection;299;1;301;0\nWireConnection;290;0;367;0\nWireConnection;290;1;364;1\nWireConnection;26;0;32;0\nWireConnection;377;0;294;0\nWireConnection;19;0;20;0\nWireConnection;19;1;20;0\nWireConnection;21;0;19;0\nWireConnection;23;0;21;0\nWireConnection;23;1;21;0\nWireConnection;47;0;46;0\nWireConnection;47;1;48;0\nWireConnection;49;0;47;0\nWireConnection;52;0;49;0\nWireConnection;52;1;51;0\nWireConnection;199;0;200;0\nWireConnection;199;1;203;0\nWireConnection;202;0;201;0\nWireConnection;202;1;204;0\nWireConnection;207;0;20;0\nWireConnection;223;0;351;0\nWireConnection;223;1;226;0\nWireConnection;201;0;193;0\nWireConnection;200;0;195;0\nWireConnection;226;0;225;0\nWireConnection;226;1;225;0\nWireConnection;215;0;345;0\nWireConnection;215;1;216;0\nWireConnection;351;0;215;0\nWireConnection;216;0;208;0\nWireConnection;216;1;346;0\nWireConnection;227;0;226;0\nWireConnection;227;1;351;0\nWireConnection;225;0;222;0\nWireConnection;45;0;44;0\nWireConnection;39;0;40;0\nWireConnection;43;0;39;0\nWireConnection;41;0;50;0\nWireConnection;42;0;41;0\nWireConnection;32;0;34;0\nWireConnection;32;1;38;0\nWireConnection;35;0;31;0\nWireConnection;38;0;33;0\nWireConnection;88;0;89;0\nWireConnection;88;1;19;0\nWireConnection;367;0;88;0\nWireConnection;34;0;35;0\nWireConnection;147;0;146;0\nWireConnection;53;0;52;0\nWireConnection;30;0;27;0\nWireConnection;27;0;36;0\nWireConnection;27;1;36;0\nWireConnection;27;2;36;0\nWireConnection;27;3;37;0\nWireConnection;27;4;37;0\nWireConnection;27;5;37;0\nWireConnection;27;6;37;0\nWireConnection;27;7;37;0\nWireConnection;27;8;37;0\nWireConnection;27;9;37;0\nWireConnection;27;10;37;0\nWireConnection;36;0;29;0\nWireConnection;25;0;24;0\nWireConnection;87;0;293;0\nWireConnection;456;0;119;0\nWireConnection;457;0;120;0\nWireConnection;458;0;122;0\nWireConnection;460;0;121;0\nWireConnection;459;0;124;0\nWireConnection;464;0;123;0\nWireConnection;383;0;90;0\nWireConnection;383;1;382;0\nWireConnection;90;0;276;0\nWireConnection;90;1;276;0\nWireConnection;90;2;276;0\nWireConnection;90;3;278;0\nWireConnection;90;4;278;0\nWireConnection;90;5;277;0\nWireConnection;90;6;277;0\nWireConnection;90;7;277;0\nWireConnection;90;8;275;0\nWireConnection;90;9;428;0\nWireConnection;90;10;428;0\nWireConnection;276;0;471;0\nWireConnection;276;1;472;0\nWireConnection;276;2;473;0\nWireConnection;276;3;476;0\nWireConnection;276;4;474;0\nWireConnection;278;0;471;0\nWireConnection;278;1;472;0\nWireConnection;278;2;473;0\nWireConnection;278;3;476;0\nWireConnection;278;4;474;0\nWireConnection;277;0;471;0\nWireConnection;277;1;475;0\nWireConnection;277;2;472;0\nWireConnection;277;3;473;0\nWireConnection;277;4;476;0\nWireConnection;277;5;474;0\nWireConnection;275;0;471;0\nWireConnection;275;1;475;0\nWireConnection;275;2;472;0\nWireConnection;275;3;473;0\nWireConnection;275;4;476;0\nWireConnection;275;5;474;0\nWireConnection;428;0;471;0\nWireConnection;428;1;475;0\nWireConnection;428;2;472;0\nWireConnection;428;3;473;0\nWireConnection;428;4;476;0\nWireConnection;428;5;474;0\nWireConnection;382;0;381;0\nWireConnection;471;0;91;0\nWireConnection;472;0;92;0\nWireConnection;473;0;94;0\nWireConnection;474;0;93;0\nWireConnection;475;0;95;0\nWireConnection;476;0;296;0\nWireConnection;318;0;256;0\nWireConnection;256;0;383;0\nWireConnection;132;0;137;0\nWireConnection;132;1;137;0\nWireConnection;132;2;137;0\nWireConnection;132;3;136;0\nWireConnection;132;4;136;0\nWireConnection;132;5;139;0\nWireConnection;132;6;139;0\nWireConnection;132;7;139;0\nWireConnection;132;8;138;0\nWireConnection;132;9;429;0\nWireConnection;132;10;429;0\nWireConnection;137;0;483;0\nWireConnection;137;1;484;0\nWireConnection;137;2;485;0\nWireConnection;137;3;490;0\nWireConnection;137;4;486;0\nWireConnection;136;0;483;0\nWireConnection;136;1;484;0\nWireConnection;136;2;485;0\nWireConnection;136;3;490;0\nWireConnection;136;4;486;0\nWireConnection;139;0;483;0\nWireConnection;139;1;487;0\nWireConnection;139;2;484;0\nWireConnection;139;3;485;0\nWireConnection;139;4;490;0\nWireConnection;139;5;486;0\nWireConnection;138;0;483;0\nWireConnection;138;1;487;0\nWireConnection;138;2;484;0\nWireConnection;138;3;485;0\nWireConnection;138;4;490;0\nWireConnection;138;5;486;0\nWireConnection;429;0;483;0\nWireConnection;429;1;487;0\nWireConnection;429;2;484;0\nWireConnection;429;3;485;0\nWireConnection;429;4;490;0\nWireConnection;429;5;486;0\nWireConnection;308;0;307;0\nWireConnection;307;0;142;0\nWireConnection;307;1;142;0\nWireConnection;319;0;257;0\nWireConnection;257;0;132;0\nWireConnection;302;0;269;0\nWireConnection;269;0;83;0\nWireConnection;269;1;83;0\nWireConnection;157;0;497;0\nWireConnection;157;1;498;0\nWireConnection;157;2;499;0\nWireConnection;157;3;500;0\nWireConnection;157;4;504;0\nWireConnection;157;5;501;0\nWireConnection;156;0;497;0\nWireConnection;156;1;498;0\nWireConnection;156;2;499;0\nWireConnection;156;3;500;0\nWireConnection;156;4;504;0\nWireConnection;156;5;501;0\nWireConnection;159;0;497;0\nWireConnection;159;1;502;0\nWireConnection;159;2;498;0\nWireConnection;159;3;499;0\nWireConnection;159;4;500;0\nWireConnection;159;5;504;0\nWireConnection;159;6;501;0\nWireConnection;158;0;497;0\nWireConnection;158;1;502;0\nWireConnection;158;2;498;0\nWireConnection;158;3;499;0\nWireConnection;158;4;500;0\nWireConnection;158;5;504;0\nWireConnection;158;6;501;0\nWireConnection;430;0;497;0\nWireConnection;430;1;502;0\nWireConnection;430;2;498;0\nWireConnection;430;3;499;0\nWireConnection;430;4;500;0\nWireConnection;430;5;504;0\nWireConnection;430;6;501;0\nWireConnection;497;0;153;0\nWireConnection;498;0;154;0\nWireConnection;499;0;160;0\nWireConnection;500;0;162;0\nWireConnection;502;0;161;0\nWireConnection;501;0;155;0\nWireConnection;152;0;157;0\nWireConnection;152;1;157;0\nWireConnection;152;2;157;0\nWireConnection;152;3;156;0\nWireConnection;152;4;156;0\nWireConnection;152;5;159;0\nWireConnection;152;6;159;0\nWireConnection;152;7;159;0\nWireConnection;152;8;158;0\nWireConnection;152;9;430;0\nWireConnection;152;10;430;0\nWireConnection;258;0;152;0\nWireConnection;320;0;258;0\nWireConnection;483;0;133;0\nWireConnection;484;0;134;0\nWireConnection;485;0;140;0\nWireConnection;490;0;308;0\nWireConnection;486;0;135;0\nWireConnection;487;0;141;0\nWireConnection;504;0;165;0\nWireConnection;172;0;511;0\nWireConnection;172;1;512;0\nWireConnection;172;2;513;0\nWireConnection;172;3;514;0\nWireConnection;172;4;518;0\nWireConnection;172;5;515;0\nWireConnection;171;0;511;0\nWireConnection;171;1;512;0\nWireConnection;171;2;513;0\nWireConnection;171;3;514;0\nWireConnection;171;4;518;0\nWireConnection;171;5;515;0\nWireConnection;174;0;511;0\nWireConnection;174;1;516;0\nWireConnection;174;2;512;0\nWireConnection;174;3;513;0\nWireConnection;174;4;514;0\nWireConnection;174;5;518;0\nWireConnection;174;6;515;0\nWireConnection;173;0;511;0\nWireConnection;173;1;516;0\nWireConnection;173;2;512;0\nWireConnection;173;3;513;0\nWireConnection;173;4;514;0\nWireConnection;173;5;518;0\nWireConnection;173;6;515;0\nWireConnection;431;0;511;0\nWireConnection;431;1;516;0\nWireConnection;431;2;512;0\nWireConnection;431;3;513;0\nWireConnection;431;4;514;0\nWireConnection;431;5;518;0\nWireConnection;431;6;515;0\nWireConnection;167;0;172;0\nWireConnection;167;1;172;0\nWireConnection;167;2;172;0\nWireConnection;167;3;171;0\nWireConnection;167;4;171;0\nWireConnection;167;5;174;0\nWireConnection;167;6;174;0\nWireConnection;167;7;174;0\nWireConnection;167;8;173;0\nWireConnection;167;9;431;0\nWireConnection;167;10;431;0\nWireConnection;334;0;177;0\nWireConnection;334;1;177;0\nWireConnection;321;0;259;0\nWireConnection;259;0;167;0\nWireConnection;511;0;168;0\nWireConnection;513;0;175;0\nWireConnection;514;0;334;0\nWireConnection;515;0;170;0\nWireConnection;516;0;176;0\nWireConnection;518;0;179;0\nWireConnection;196;0;199;0\nWireConnection;512;0;169;0\nWireConnection;197;0;202;0\nWireConnection;209;0;354;0\nWireConnection;180;0;185;0\nWireConnection;180;1;185;0\nWireConnection;180;2;185;0\nWireConnection;180;3;184;0\nWireConnection;180;4;184;0\nWireConnection;180;5;187;0\nWireConnection;180;6;187;0\nWireConnection;180;7;187;0\nWireConnection;180;8;186;0\nWireConnection;180;9;432;0\nWireConnection;180;10;432;0\nWireConnection;184;0;526;0\nWireConnection;184;1;527;0\nWireConnection;184;2;536;0\nWireConnection;184;3;534;0\nWireConnection;184;4;528;0\nWireConnection;184;5;529;0\nWireConnection;184;6;532;0\nWireConnection;184;7;530;0\nWireConnection;187;0;526;0\nWireConnection;187;1;527;0\nWireConnection;187;2;536;0\nWireConnection;187;3;531;0\nWireConnection;187;4;534;0\nWireConnection;187;5;528;0\nWireConnection;187;6;529;0\nWireConnection;187;7;532;0\nWireConnection;187;8;530;0\nWireConnection;186;0;526;0\nWireConnection;186;1;527;0\nWireConnection;186;2;536;0\nWireConnection;186;3;531;0\nWireConnection;186;4;534;0\nWireConnection;186;5;528;0\nWireConnection;186;6;529;0\nWireConnection;186;7;532;0\nWireConnection;186;8;530;0\nWireConnection;432;0;526;0\nWireConnection;432;1;527;0\nWireConnection;432;2;536;0\nWireConnection;432;3;531;0\nWireConnection;432;4;534;0\nWireConnection;432;5;528;0\nWireConnection;432;6;529;0\nWireConnection;432;7;532;0\nWireConnection;432;8;530;0\nWireConnection;185;0;526;0\nWireConnection;185;1;527;0\nWireConnection;185;2;536;0\nWireConnection;185;3;534;0\nWireConnection;185;4;528;0\nWireConnection;185;5;529;0\nWireConnection;185;6;532;0\nWireConnection;185;7;530;0\nWireConnection;322;0;260;0\nWireConnection;260;0;180;0\nWireConnection;526;0;181;0\nWireConnection;527;0;205;0\nWireConnection;534;0;182;0\nWireConnection;528;0;188;0\nWireConnection;530;0;183;0\nWireConnection;531;0;189;0\nWireConnection;532;0;218;0\nWireConnection;536;0;206;0\nWireConnection;529;0;228;0\nWireConnection;244;0;546;0\nWireConnection;244;1;547;0\nWireConnection;244;2;553;0\nWireConnection;244;3;548;0\nWireConnection;244;4;549;0\nWireConnection;244;5;556;0\nWireConnection;244;6;554;0\nWireConnection;244;7;552;0\nWireConnection;244;8;550;0\nWireConnection;245;0;546;0\nWireConnection;245;1;547;0\nWireConnection;245;2;553;0\nWireConnection;245;3;548;0\nWireConnection;245;4;549;0\nWireConnection;245;5;556;0\nWireConnection;245;6;554;0\nWireConnection;245;7;552;0\nWireConnection;245;8;550;0\nWireConnection;246;0;546;0\nWireConnection;246;1;547;0\nWireConnection;246;2;553;0\nWireConnection;246;3;551;0\nWireConnection;246;4;548;0\nWireConnection;246;5;549;0\nWireConnection;246;6;556;0\nWireConnection;246;7;554;0\nWireConnection;246;8;552;0\nWireConnection;246;9;550;0\nWireConnection;247;0;546;0\nWireConnection;247;1;547;0\nWireConnection;247;2;553;0\nWireConnection;247;3;551;0\nWireConnection;247;4;548;0\nWireConnection;247;5;549;0\nWireConnection;247;6;556;0\nWireConnection;247;7;554;0\nWireConnection;247;8;552;0\nWireConnection;247;9;550;0\nWireConnection;433;0;546;0\nWireConnection;433;1;547;0\nWireConnection;433;2;553;0\nWireConnection;433;3;551;0\nWireConnection;433;4;548;0\nWireConnection;433;5;549;0\nWireConnection;433;6;556;0\nWireConnection;433;7;554;0\nWireConnection;433;8;552;0\nWireConnection;433;9;550;0\nWireConnection;239;0;244;0\nWireConnection;239;1;244;0\nWireConnection;239;2;244;0\nWireConnection;239;3;245;0\nWireConnection;239;4;245;0\nWireConnection;239;5;246;0\nWireConnection;239;6;246;0\nWireConnection;239;7;246;0\nWireConnection;239;8;247;0\nWireConnection;239;9;433;0\nWireConnection;239;10;433;0\nWireConnection;323;0;261;0\nWireConnection;261;0;239;0\nWireConnection;546;0;234;0\nWireConnection;547;0;237;0\nWireConnection;548;0;238;0\nWireConnection;553;0;243;0\nWireConnection;549;0;236;0\nWireConnection;556;0;252;0\nWireConnection;550;0;235;0\nWireConnection;551;0;242;0\nWireConnection;552;0;241;0\nWireConnection;554;0;240;0\nWireConnection;418;0;419;0\nWireConnection;418;1;419;0\nWireConnection;418;2;419;0\nWireConnection;418;3;420;0\nWireConnection;418;4;420;0\nWireConnection;418;5;422;0\nWireConnection;418;6;422;0\nWireConnection;418;7;422;0\nWireConnection;418;8;421;0\nWireConnection;418;9;434;0\nWireConnection;418;10;434;0\nWireConnection;569;0;414;0\nWireConnection;571;0;413;0\nWireConnection;573;0;416;0\nWireConnection;575;0;417;0\nWireConnection;576;0;415;0\nWireConnection;419;0;569;0\nWireConnection;419;1;571;0\nWireConnection;419;2;573;0\nWireConnection;419;3;575;0\nWireConnection;420;0;569;0\nWireConnection;420;1;571;0\nWireConnection;420;2;573;0\nWireConnection;420;3;575;0\nWireConnection;422;0;569;0\nWireConnection;422;1;576;0\nWireConnection;422;2;571;0\nWireConnection;422;3;573;0\nWireConnection;422;4;575;0\nWireConnection;421;0;569;0\nWireConnection;421;1;576;0\nWireConnection;421;2;571;0\nWireConnection;421;3;573;0\nWireConnection;421;4;575;0\nWireConnection;434;0;569;0\nWireConnection;434;1;576;0\nWireConnection;434;2;571;0\nWireConnection;434;3;573;0\nWireConnection;434;4;575;0\nWireConnection;423;0;418;0\nWireConnection;425;0;423;0\nWireConnection;442;0;62;0\nWireConnection;448;0;64;0\nWireConnection;439;0;65;0\nWireConnection;440;0;264;0\nWireConnection;444;0;302;0\nWireConnection;446;0;150;0\nWireConnection;438;0;61;0\nWireConnection;28;0;30;0\nWireConnection;262;0;254;0\nWireConnection;262;1;310;0\nWireConnection;262;2;312;0\nWireConnection;262;3;313;0\nWireConnection;262;4;314;0\nWireConnection;262;5;315;0\nWireConnection;262;6;316;0\nWireConnection;262;7;317;0\nWireConnection;262;8;424;0\nWireConnection;0;0;262;0\nASEEND*/\n//CHKSM=F1016FC1DC9F4DDD8C787524A4789DC0C4B541D7"
  m_functionName: 
  m_description: 'SRP Additional Lights PBR


    Learning Sample

'
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 1
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives:
    - {fileID: 0}
    - {fileID: 0}
    - {fileID: 0}
    - {fileID: 0}
    - {fileID: 0}
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems:
    - LineType: 2
      LineValue: multi_compile _ _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHTS
      GUIDToggle: 0
      GUIDValue: 
      ShowConditionals: 1
      VersionMin: 0
      VersionMax: 0
      Passes: Forward
      Origin: 2
    - LineType: 2
      LineValue: multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS
      GUIDToggle: 0
      GUIDValue: 
      ShowConditionals: 1
      VersionMin: 0
      VersionMax: 0
      Passes: Forward
      Origin: 2
    - LineType: 2
      LineValue: multi_compile _ _FORWARD_PLUS
      GUIDToggle: 0
      GUIDValue: 
      ShowConditionals: 1
      VersionMin: 140000
      VersionMax: 170000
      Passes: Forward
      Origin: 2
    - LineType: 2
      LineValue: multi_compile _ _CLUSTER_LIGHT_LOOP
      GUIDToggle: 0
      GUIDValue: 
      ShowConditionals: 1
      VersionMin: 170100
      VersionMax: 0
      Passes: Forward
      Origin: 2
    - LineType: 2
      LineValue: multi_compile _ _LIGHT_LAYERS
      GUIDToggle: 0
      GUIDValue: 
      ShowConditionals: 1
      VersionMin: 140000
      VersionMax: 0
      Passes: Forward
      Origin: 2
  m_nodeCategory: 0
  m_headerStyle: 2
  m_headerColor: {r: 0.7529412, g: 0.6784314, b: 0, a: 1}
  m_customNodeCategory: LS Lighting
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
