%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: LS Cosine
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.8\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19800\nNode;AmplifyShaderEditor.CommentaryNode;65;800,64;Inherit;False;1643;672;Rotating
    UV Coordinates;19;36;37;38;39;40;41;43;55;46;63;56;57;58;59;42;64;44;60;66;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;30;-320,48;Inherit;False;1069.032;477.2662;Blinking
    Light;7;33;32;28;29;31;27;26;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;25;576,-384;Inherit;False;313.9727;300.918;Remap
    from [-1,1] to [0,1];1;24;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;23;288,-384;Inherit;False;248;304;Cosine
    wave function;1;22;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;21;-320,-384;Inherit;False;578.9727;299.2188;Horizontal
    gradient from 0 to 2PI;4;20;19;17;18;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;16;-320,-752;Inherit;False;615.2999;304;Cosine
    Node;2;15;14;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;14;-64,-688;Inherit;False;314.2999;119.7;;;0,0,0,1;The
    Cos node outputs the cosine of the value specified on its Input. The input value
    must be in radians unit system.;0;0\nNode;AmplifyShaderEditor.CosOpNode;15;-240,-688;Inherit;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;17;-272,-320;Inherit;False;Constant;_Two;Two;0;0;Create;True;0;0;0;False;0;False;2;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;19;80,-320;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.TexCoordVertexDataNode;20;-144,-240;Inherit;False;0;2;0;5;FLOAT2;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.CosOpNode;22;336,-320;Inherit;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.ScaleAndOffsetNode;24;624,-320;Inherit;True;3;0;FLOAT;0;False;1;FLOAT;1;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode;31;-128,208;Inherit;False;207.7555;108.6633;;;0,0,0,1;First
    we speed up our time by multiplying it by five.;0;0\nNode;AmplifyShaderEditor.TFHCRemapNode;29;464,96;Inherit;True;5;0;FLOAT;0;False;1;FLOAT;-1;False;2;FLOAT;0;False;3;FLOAT;1;False;4;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CosOpNode;28;192,96;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode;32;128,192;Inherit;False;238.077;124.546;;;0,0,0,1;The
    Cosine node takes the constantly increasing time value and oscillates it between
    -1 and 1 in a continuous wave pattern.;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;33;432,320;Inherit;False;272.7303;157.7555;;;0,0,0,1;To
    make the result more useful for visuals, we remap the -1 to 1 range to a range
    of 0 to 1 instead.$$This is a good illustration of the smooth wave created by
    the Sine node.;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;34;-1316.216,-768;Inherit;False;929.6648;682.3411;Reference
    Implementation;;0,0,0,1;cos is best implemented as a native cosine instruction,
    however cos for a float scalar could be implemented by an approximation like
    this.$$cos(float a)${$  /* C simulation gives a max absolute error of less than
    1.8e-7 */$  const float4 c0 = float4( 0.0,            0.5,$                           
    1.0,            0.0            )@$  const float4 c1 = float4( 0.25,         
    -9.0,$                            0.75,           0.159154943091 )@$  const float4
    c2 = float4( 24.9808039603, -24.9808039603,$                           -60.1458091736, 
    60.1458091736  )@$  const float4 c3 = float4( 85.4537887573, -85.4537887573,$                          
    -64.9393539429,  64.9393539429  )@$  const float4 c4 = float4( 19.7392082214,
    -19.7392082214,$                           -1.0,            1.0            )@$$ 
    /* r0.x = cos(a) */$  float3 r0, r1, r2@$$  r1.x  = c1.w * a@                      
    // normalize input$  r1.y  = frac( r1.x )@                   // and extract fraction$ 
    r2.x  = (float) ( r1.y < c1.x )@        // range check: 0.0 to 0.25$  r2.yz =
    (float2) ( r1.yy >= c1.yz )@    // range check: 0.75 to 1.0$  r2.y  = dot( r2,
    c4.zwz )@              // range check: 0.25 to 0.75$  r0    = c0.xyz - r1.yyy@               
    // range centering$  r0    = r0 * r0@$  r1    = c2.xyx * r0 + c2.zwz@          
    // start power series$  r1    =     r1 * r0 + c3.xyx@$  r1    =     r1 * r0 +
    c3.zwz@$  r1    =     r1 * r0 + c4.xyx@$  r1    =     r1 * r0 + c4.zwz@$  r0.x 
    = dot( r1, -r2 )@                 // range extract$$  return r0.x@;0;0\nNode;AmplifyShaderEditor.CosOpNode;36;1360,112;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SinOpNode;37;1360,192;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;38;1536,112;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;39;1536,208;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;40;1536,304;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;41;1536,400;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.BreakToComponentsNode;43;1360,272;Inherit;False;FLOAT2;1;0;FLOAT2;0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.SimpleAddOpNode;55;1744,112;Inherit;True;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;46;1200,272;Inherit;False;2;0;FLOAT2;0,0;False;1;FLOAT2;0.5,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.TexCoordVertexDataNode;63;960,272;Inherit;False;0;2;0;5;FLOAT2;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;56;1744,320;Inherit;True;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WireNode;57;2144,192;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.WireNode;58;2144,496;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;59;2208,480;Inherit;True;2;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.DynamicAppendNode;42;1984,112;Inherit;False;FLOAT2;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.Vector2Node;64;992,512;Inherit;False;Constant;_Anchor;Anchor;0;0;Create;True;0;0;0;False;0;False;0.5,0.5;0,0;0;3;FLOAT2;0;FLOAT;1;FLOAT;2\nNode;AmplifyShaderEditor.RadiansOpNode;44;1200,112;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode;66;2208,352;Inherit;False;150;100;;;0,0,0,1;See
    UV Rotation for more detail;0;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;27;-48,96;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;5;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleTimeNode;26;-272,96;Inherit;False;1;0;FLOAT;55;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleTimeNode;60;1008,112;Inherit;False;1;0;FLOAT;55;False;1;FLOAT;0\nNode;AmplifyShaderEditor.PiNode;18;-112,-320;Inherit;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;6;-320,-848;Inherit;False;True;-1;Out;0;False;1;0;FLOAT;0;False;1;FLOAT;0\nWireConnection;19;0;18;0\nWireConnection;19;1;20;1\nWireConnection;22;0;19;0\nWireConnection;24;0;22;0\nWireConnection;29;0;28;0\nWireConnection;28;0;27;0\nWireConnection;36;0;44;0\nWireConnection;37;0;44;0\nWireConnection;38;0;36;0\nWireConnection;38;1;43;0\nWireConnection;39;0;37;0\nWireConnection;39;1;43;1\nWireConnection;40;0;36;0\nWireConnection;40;1;43;1\nWireConnection;41;0;37;0\nWireConnection;41;1;43;0\nWireConnection;43;0;46;0\nWireConnection;55;0;38;0\nWireConnection;55;1;39;0\nWireConnection;46;0;63;0\nWireConnection;46;1;64;0\nWireConnection;56;0;40;0\nWireConnection;56;1;41;0\nWireConnection;57;0;42;0\nWireConnection;58;0;57;0\nWireConnection;59;0;58;0\nWireConnection;59;1;64;0\nWireConnection;42;0;55;0\nWireConnection;42;1;56;0\nWireConnection;44;0;60;0\nWireConnection;27;0;26;0\nWireConnection;18;0;17;0\nASEEND*/\n//CHKSM=557244F9298043424477860E0C4155C36171368A"
  m_functionName: 
  m_description: 'Cosine Node

    Cos


    Learning Sample


    GPU Cycles:

    16-31'
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_headerStyle: 2
  m_headerColor: {r: 0.19215687, g: 0.25882354, b: 0.3254902, a: 1}
  m_customNodeCategory: LS Math Trigonometry
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
