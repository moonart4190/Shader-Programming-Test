%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: LS Constant Bias Scale
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.8\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19800\nNode;AmplifyShaderEditor.CommentaryNode;16;-512,0;Inherit;False;768.3906;312.3416;Example;3;14;13;15;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;10;-517.3201,-432;Inherit;False;1061.581;364.3953;Math;8;3;5;20;19;2;18;1;4;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;9;-512,-768;Inherit;False;643.5969;302.5019;Constant
    Bias Scale Node;2;12;7;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;7;-224,-720;Inherit;False;277.6521;155.5534;;;0,0,0,1;Simple
    Bias and Scale operation. Output = (Input + Bias) * Scale;0;0\nNode;AmplifyShaderEditor.FunctionNode;12;-464,-720;Inherit;True;ConstantBiasScale;-1;;3;63208df05c83e8e49a48ffbdce2e43a0;0;3;3;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;4;80,-384;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;1;-224,-384;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode;18;-480,-208;Inherit;False;194;104;Bias;;0,0,0,1;Specifies
    the value to be added to the input;0;0\nNode;AmplifyShaderEditor.FunctionInput;2;-416,-384;Inherit;False;Input;1;0;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode;19;-128,-208;Inherit;False;194;104;Scale;;0,0,0,1;Specifies
    the multiplier for the biased result;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;20;96,-272;Inherit;False;411.9294;170.7564;;;0,0,0,1;The
    ConstantBiasScale takes an input value, adds a bias value to it, and then multiplies
    it by a scaling factor outputting the result. So for example, to convert input
    data from [-1,1] to [0,1] you would use a bias of 1.0 and a scale of 0.5.;0;0\nNode;AmplifyShaderEditor.FunctionInput;5;-128,-288;Inherit;False;Scale;1;2;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SinOpNode;15;-272,48;Inherit;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionNode;13;-64,48;Inherit;True;ConstantBiasScale;-1;;4;63208df05c83e8e49a48ffbdce2e43a0;0;3;3;FLOAT;0;False;1;FLOAT;0.5;False;2;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleTimeNode;14;-464,48;Inherit;False;1;0;FLOAT;2;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;3;-416,-288;Inherit;False;Bias;1;1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;6;-512,-896;Inherit;False;True;-1;Out;0;True;1;0;FLOAT;0;False;1;FLOAT;0\nWireConnection;4;0;1;0\nWireConnection;4;1;5;0\nWireConnection;1;0;2;0\nWireConnection;1;1;3;0\nWireConnection;15;0;14;0\nWireConnection;13;3;15;0\nASEEND*/\n//CHKSM=1E4DEA01CC3A60B102933C8E89EFFA2ABEE83C87"
  m_functionName: 
  m_description: 'Constant Bias Scale Node


    Learning Sample

'
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_headerStyle: 2
  m_headerColor: {r: 0.19215687, g: 0.25882354, b: 0.3254902, a: 1}
  m_customNodeCategory: LS Math
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
